[{"D:\\Project\\initcard-project-demo\\frontend\\src\\index.js":"1","D:\\Project\\initcard-project-demo\\frontend\\src\\App.js":"2","D:\\Project\\initcard-project-demo\\frontend\\src\\reportWebVitals.js":"3","D:\\Project\\initcard-project-demo\\frontend\\src\\MainRouter.js":"4","D:\\Project\\initcard-project-demo\\frontend\\src\\theme.js":"5","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\NavBar.js":"6","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardMain.js":"7","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardLinks.js":"8","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardChips.js":"9","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardMoreOptions.js":"10","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardLink.js":"11","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\NameCard.js":"12","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardMoreOption.js":"13","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CameraControls.js":"14","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\TabPanel.js":"15","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardDisplayWrapper.js":"16","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\Card3d.js":"17"},{"size":500,"mtime":1607668864711,"results":"18","hashOfConfig":"19"},{"size":1264,"mtime":1607843012143,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607343641901,"results":"21","hashOfConfig":"19"},{"size":891,"mtime":1608721871645,"results":"22","hashOfConfig":"19"},{"size":763,"mtime":1607844175420,"results":"23","hashOfConfig":"19"},{"size":2554,"mtime":1608721866943,"results":"24","hashOfConfig":"19"},{"size":12584,"mtime":1608553642200,"results":"25","hashOfConfig":"19"},{"size":344,"mtime":1607565589797,"results":"26","hashOfConfig":"19"},{"size":992,"mtime":1608043186680,"results":"27","hashOfConfig":"19"},{"size":463,"mtime":1608015141567,"results":"28","hashOfConfig":"19"},{"size":1332,"mtime":1607860460237,"results":"29","hashOfConfig":"19"},{"size":1285,"mtime":1607347894824,"results":"30","hashOfConfig":"19"},{"size":1211,"mtime":1608015314997,"results":"31","hashOfConfig":"19"},{"size":562,"mtime":1608559119422,"results":"32","hashOfConfig":"19"},{"size":444,"mtime":1607409026325,"results":"33","hashOfConfig":"19"},{"size":2697,"mtime":1608556155569,"results":"34","hashOfConfig":"19"},{"size":621,"mtime":1608553642199,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"66nzue",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\Project\\initcard-project-demo\\frontend\\src\\index.js",[],["74","75"],"D:\\Project\\initcard-project-demo\\frontend\\src\\App.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\reportWebVitals.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\MainRouter.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\theme.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\NavBar.js",["76"],"import React, { useState } from 'react';\r\nimport {\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Button,\r\n  //   Link,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: { display: 'flex', flexGrow: 1 },\r\n  navigationItems: { display: 'flex', flexGrow: 9, flexDirection: 'row' },\r\n  publicItems: { display: 'flex' },\r\n  accountItems: { display: 'flex', marginLeft: 'auto' },\r\n  offset: theme.mixins.toolbar,\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n  const classes = useStyles();\r\n  const [menuIsHide, setMenuIsHide] = useState(true);\r\n\r\n  //   const ref = createRef();\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar variant=\"dense\">\r\n          <div className={classes.logo}>\r\n            <Typography variant=\"h6\">Init Card</Typography>\r\n            {menuIsHide ? null : (\r\n              <IconButton edge aria-label=\"menu\" color=\"inherit\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n          <div className={classes.navigationItems}>\r\n            <div className={classes.publicItems}>\r\n              <Button component={RouterLink} to=\"/home\" color=\"inherit\">\r\n                <Typography>Home</Typography>\r\n              </Button>\r\n              <Button component={RouterLink} to=\"/\" color=\"inherit\">\r\n                <Typography>Card</Typography>\r\n              </Button>\r\n              <Button component={RouterLink} to=\"/latest\" color=\"inherit\">\r\n                <Typography>Latest</Typography>\r\n              </Button>\r\n              <Button component={RouterLink} to=\"/features\" color=\"inherit\">\r\n                <Typography>Features</Typography>\r\n              </Button>\r\n              <Button component={RouterLink} to=\"/regions\" color=\"inherit\">\r\n                <Typography>Regions</Typography>\r\n              </Button>\r\n            </div>\r\n            <div className={classes.accountItems}>\r\n              <Button component={RouterLink} to=\"/account\" color=\"inherit\">\r\n                <Typography>Account</Typography>\r\n              </Button>\r\n              <Button component={RouterLink} to=\"/login\" color=\"inherit\">\r\n                <Typography>Login</Typography>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.offset} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardMain.js",["77","78","79"],"import React, { useState } from 'react';\r\nimport QRCode from 'react-qr-code';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Popper,\r\n  ClickAwayListener,\r\n  CardContent,\r\n  CardActions,\r\n  Collapse,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  Divider,\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Link,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport { makeStyles, withStyles, styled } from '@material-ui/core/styles';\r\nimport {\r\n  Person as PersonIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Language as LanguageIcon,\r\n  Bookmark as BookmarkIcon,\r\n  Share as ShareIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Phone as PhoneIcon,\r\n  Email as EmailIcon,\r\n  Message as MessageIcon,\r\n  QrCode2 as QrCode2Icon,\r\n  Cancel as CancelIcon,\r\n  AddCircle as AddCircleIcon,\r\n} from '@material-ui/icons';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport CardDisplayWrapper from './CardDisplayWrapper';\r\nimport CardMoreOptions from './CardMoreOptions';\r\nimport CardChips from './CardChips';\r\nimport CardLinks from './CardLinks';\r\n\r\nimport frontCard from '../assets/chinese-business-card-translation-samples-intel-445-eng.jpg';\r\nimport backCard from '../assets/chinese-business-card-translation-samples-intel-445-sch.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  dialogCloseButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n  dialogAddButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n  moreOptionsContainer: {\r\n    position: 'relative',\r\n  },\r\n});\r\n\r\nconst CustomDialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, onAdd, ...rest } = props;\r\n  return (\r\n    <DialogTitle disableTypography {...rest}>\r\n      <Typography variant=\"h6\" component=\"div\">\r\n        {children}\r\n      </Typography>\r\n      {onAdd ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onAdd}\r\n          className={classes.dialogAddButton}\r\n        >\r\n          <AddCircleIcon />\r\n        </IconButton>\r\n      ) : null}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          className={classes.dialogCloseButton}\r\n        >\r\n          <CancelIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n});\r\n\r\nconst CustomPopper = styled(Popper)({\r\n  position: 'absolute',\r\n});\r\n\r\nconst MoreOptionsContainer = withStyles(styles)(\r\n  React.forwardRef((props, ref) => {\r\n    const { classes, children, ...rest } = props;\r\n    return (\r\n      <Paper className={classes.moreOptionsContainer} {...rest}>\r\n        {children}\r\n      </Paper>\r\n    );\r\n  })\r\n);\r\n\r\nconst MoreOptionsOnClick = (props) => {\r\n  const {\r\n    moreOptionsToggleHandler,\r\n    popperId,\r\n    moreOptions,\r\n    moreOptionsIsOpen,\r\n    anchorEl,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-describedby={popperId}\r\n        onClick={moreOptionsToggleHandler}\r\n        ref={anchorEl}\r\n        disabled={moreOptionsIsOpen}\r\n      >\r\n        <MoreHorizIcon />\r\n      </IconButton>\r\n      <ClickAwayListener\r\n        mouseEvent=\"onMouseDown\"\r\n        touchEvent=\"onTouchStart\"\r\n        onClickAway={moreOptionsToggleHandler}\r\n      >\r\n        <CustomPopper\r\n          id={popperId}\r\n          open={moreOptionsIsOpen}\r\n          anchorEl={anchorEl}\r\n          popperRef={anchorEl}\r\n          placement=\"bottom-end\"\r\n          modifiers={[\r\n            { name: 'flip', enabled: false },\r\n            {\r\n              name: 'preventOverflow',\r\n              enabled: false,\r\n            },\r\n          ]}\r\n        >\r\n          <MoreOptionsContainer>\r\n            <CardMoreOptions\r\n              moreOptions={moreOptions}\r\n              moreOptionsHandler={moreOptionsToggleHandler}\r\n            />\r\n          </MoreOptionsContainer>\r\n        </CustomPopper>\r\n      </ClickAwayListener>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CardMain = () => {\r\n  const [data, setData] = useState({\r\n    _id: 'abcd1234',\r\n    initLink: 'chris',\r\n    cardType: 'public',\r\n    frontCard: frontCard,\r\n    backCard: backCard,\r\n    name: 'Chris Martin Lee',\r\n    companyName: 'SomeCompany',\r\n    position: 'Software Engineer',\r\n    website: 'https://material-ui.com/',\r\n    links: [\r\n      { title: 'Like me from Facebook', link: 'https://www.facebook.com/' },\r\n      { title: 'Subscribe me from Youtube', link: 'https://www.youtube.com/' },\r\n      {\r\n        title: 'See my website for more info',\r\n        link: 'https://material-ui.com/',\r\n      },\r\n    ],\r\n    tags: [\r\n      'Semiconductor',\r\n      'Intel',\r\n      'Bob Swan',\r\n      'Intel Inside',\r\n      'Sponsors of Tomorrow',\r\n      'Look Inside',\r\n      \"Experience What's Inside\",\r\n      'Semiconductor',\r\n      'Intel',\r\n      'Bob Swan',\r\n      'Intel Inside',\r\n      'Sponsors of Tomorrow',\r\n      'Look Inside',\r\n      \"Experience What's Inside\",\r\n    ],\r\n    categories: 'Hardware Manufacture',\r\n    description:\r\n      'Intel Corporation is an American multinational corporation and technology company headquartered in Santa Clara, California, in Silicon Valley',\r\n    address: ['KLCC'],\r\n    contactPerson: {\r\n      contactName: 'Chris Martin Lee',\r\n      contactNumber: '+60 198765432',\r\n      contactEmail: 'chrismartin@gmail.com',\r\n    },\r\n    createdBy: 'Chris Martin Lee',\r\n    updatedBy: 'Chris Martin Lee',\r\n    updated: new Date().toISOString(),\r\n    created: new Date().toISOString(),\r\n    expired: new Date().toISOString(),\r\n  });\r\n\r\n  const [moreOptions, setMoreOptions] = useState([\r\n    { label: 'hide', title: 'Hide', description: 'Show Hide Options' },\r\n    {\r\n      label: 'block',\r\n      title: 'Block',\r\n      description: 'Block the selected person',\r\n    },\r\n    { label: 'report', title: 'Report', description: 'Show Report Options' },\r\n  ]);\r\n\r\n  const [cardDisplayType, setCardDisplayType] = useState('3d');\r\n  const [expanded, setExpanded] = useState(true);\r\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [bookmarkIsOpen, setBookmarkIsOpen] = useState(false);\r\n  const [shareIsOpen, setShareIsOpen] = useState(false);\r\n  const [qrCodeIsOpen, setQRCodeIsOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const moreOptionsToggleHandler = (event) => {\r\n    setMoreOptionsIsOpen((prev) => !prev);\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  };\r\n\r\n  const bookmarkHandler = () => {\r\n    setBookmarkIsOpen((prev) => !prev);\r\n  };\r\n\r\n  const shareHandler = () => {\r\n    setShareIsOpen((prev) => !prev);\r\n  };\r\n\r\n  const qrCodeHandler = () => {\r\n    setQRCodeIsOpen((prev) => !prev);\r\n  };\r\n\r\n  const bookmarkAddHandler = () => {};\r\n\r\n  const popperId = moreOptionsIsOpen ? 'more-options-popper' : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={8} md={8} lg={6} xl={4}>\r\n          <Card>\r\n            <CardHeader\r\n              title={data.name}\r\n              subheader={data.companyName}\r\n              avatar={\r\n                <RouterLink to={'/account'}>\r\n                  <Avatar>\r\n                    <PersonIcon />\r\n                  </Avatar>\r\n                </RouterLink>\r\n              }\r\n              action={\r\n                <MoreOptionsOnClick\r\n                  moreOptions={moreOptions}\r\n                  popperId={popperId}\r\n                  moreOptionsToggleHandler={moreOptionsToggleHandler}\r\n                  moreOptionsIsOpen={moreOptionsIsOpen}\r\n                  anchorEl={anchorEl}\r\n                />\r\n              }\r\n            ></CardHeader>\r\n            <Divider variant=\"middle\" />\r\n            <CardContent>\r\n              <Typography>{data.description}</Typography>\r\n              <CardDisplayWrapper\r\n                data={data}\r\n                cardDisplayType={cardDisplayType}\r\n              />\r\n              <CardChips data={data} />\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n              <Link\r\n                href={data.website}\r\n                underline=\"none\"\r\n                target=\"_blank\"\r\n                rel=\"noopener\"\r\n                component=\"a\"\r\n              >\r\n                <IconButton aria-label=\"website\">\r\n                  <LanguageIcon />\r\n                </IconButton>\r\n              </Link>\r\n              <IconButton aria-label=\"bookmark\" onClick={bookmarkHandler}>\r\n                <BookmarkIcon />\r\n              </IconButton>\r\n              <Dialog\r\n                open={bookmarkIsOpen}\r\n                aria-labelledby=\"bookmark-dialog-title\"\r\n                onClose={bookmarkHandler}\r\n              >\r\n                <CustomDialogTitle\r\n                  id=\"bookmark-dialog-title\"\r\n                  onClose={bookmarkHandler}\r\n                  onAdd={bookmarkAddHandler}\r\n                >\r\n                  Bookmark\r\n                </CustomDialogTitle>\r\n                <DialogContent dividers>\r\n                  <QRCode value={data.initLink} />\r\n                </DialogContent>\r\n              </Dialog>\r\n              <Link\r\n                href={`tel:+${data.contactPerson.contactNumber}`}\r\n                underline=\"none\"\r\n                target=\"_self\"\r\n                rel=\"noopener\"\r\n                component=\"a\"\r\n              >\r\n                <IconButton aria-label=\"phone\">\r\n                  <PhoneIcon />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                href={`mailto:${data.contactPerson.contactEmail}`}\r\n                underline=\"none\"\r\n                target=\"_self\"\r\n                rel=\"noopener\"\r\n                component=\"a\"\r\n              >\r\n                <IconButton aria-label=\"email\">\r\n                  <EmailIcon />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                href={`sms:${data.contactPerson.contactNumber}`}\r\n                underline=\"none\"\r\n                target=\"_self\"\r\n                rel=\"noopener\"\r\n                component=\"a\"\r\n              >\r\n                <IconButton aria-label=\"message\">\r\n                  <MessageIcon />\r\n                </IconButton>\r\n              </Link>\r\n              <IconButton aria-label=\"share\" onClick={shareHandler}>\r\n                <ShareIcon />\r\n              </IconButton>\r\n              <Dialog\r\n                open={shareIsOpen}\r\n                aria-labelledby=\"share-dialog-title\"\r\n                onClose={shareHandler}\r\n              >\r\n                <CustomDialogTitle\r\n                  id=\"share-dialog-title\"\r\n                  onClose={shareHandler}\r\n                >\r\n                  Share\r\n                </CustomDialogTitle>\r\n                <DialogContent dividers>\r\n                  <QRCode value={data.initLink} />\r\n                </DialogContent>\r\n              </Dialog>\r\n              <IconButton aria-label=\"qr-code\" onClick={qrCodeHandler}>\r\n                <QrCode2Icon />\r\n              </IconButton>\r\n              <Dialog\r\n                open={qrCodeIsOpen}\r\n                aria-labelledby=\"qr-code-dialog-title\"\r\n                onClose={qrCodeHandler}\r\n              >\r\n                <CustomDialogTitle\r\n                  id=\"qr-code-dialog-title\"\r\n                  onClose={qrCodeHandler}\r\n                >\r\n                  QR Code\r\n                </CustomDialogTitle>\r\n                <DialogContent dividers>\r\n                  <QRCode value={data.initLink} />\r\n                </DialogContent>\r\n              </Dialog>\r\n              <IconButton\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                <CardLinks data={data} />\r\n              </CardContent>\r\n            </Collapse>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardMain;\r\n","D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardLinks.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardChips.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardMoreOptions.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardLink.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\NameCard.js",[],["80","81"],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardMoreOption.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CameraControls.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\TabPanel.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\CardDisplayWrapper.js",[],"D:\\Project\\initcard-project-demo\\frontend\\src\\components\\Card3d.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":24,"column":22,"nodeType":"88","messageId":"89","endLine":24,"endColumn":35},{"ruleId":"86","severity":1,"message":"90","line":171,"column":16,"nodeType":"88","messageId":"89","endLine":171,"endColumn":23},{"ruleId":"86","severity":1,"message":"91","line":221,"column":23,"nodeType":"88","messageId":"89","endLine":221,"endColumn":37},{"ruleId":"86","severity":1,"message":"92","line":231,"column":27,"nodeType":"88","messageId":"89","endLine":231,"endColumn":45},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'setMenuIsHide' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'setMoreOptions' is assigned a value but never used.","'setCardDisplayType' is assigned a value but never used.",["95"],["96"],"no-global-assign","no-unsafe-negation"]