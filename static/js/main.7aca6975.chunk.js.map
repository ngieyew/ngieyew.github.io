{"version":3,"sources":["theme.js","hooks/store.js","assets/svg/SvgIcons.js","assets/chinese-business-card-translation-samples-intel-445-eng.jpg","assets/chinese-business-card-translation-samples-intel-445-sch.jpg","assets/front.png","assets/back.png","components/Demo/FullList.js","components/core/SearchBar.js","components/core/AccountDropDownOption.js","components/core/SignOut.js","components/core/AccountDropDownOptions.js","components/core/AccountInfo.js","components/core/VerticalNavItems.js","hooks/useWindowSize.js","components/core/DrawerContainer.js","components/core/AccountDropDown.js","components/core/Logo.js","components/core/HorizontalNavItems.js","components/core/NavBar.js","components/Card/TabPanel.js","components/Card/CameraControls.js","components/Card/NameCard.js","components/Card/Card3d.js","components/Card/CardDisplayWrapper.js","components/Card/CardMoreOption.js","components/Card/CardMoreOptions.js","components/Card/CardChips.js","components/Card/CardLink.js","components/Card/CardLinks.js","components/Card/CardDescriptionList.js","components/Card/CardActionLinks.js","components/Card/CardMain.js","components/Demo/SingleItem.js","components/core/Home.js","components/Card/CardList.js","components/Card/LatestCard.js","components/helper/InputTextRenderer.js","components/helper/RestructureFormObject.js","components/helper/fieldValidation.js","components/helper/fieldChangeHandler.js","components/Account/Details.js","components/helper/FormObjectList.js","components/Account/CardDetails.js","components/helper/fieldsIsValidHandler.js","components/Demo/User.js","components/Account/SignIn.js","components/Account/SignUp.js","components/Auth/PrivateRoute.js","MainRouter.js","App.js","reportWebVitals.js","hooks/store-user.js","index.js"],"names":["primaryMain","theme","direction","palette","primary","light","main","dark","contrastText","secondary","openTitle","protectedTitle","pink","breakpoints","values","xxxs","xxs","xs","sm","smd","md","lmd","lg","xl","globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionIdentifier","payload","newState","listener","useEffect","push","filter","li","menuIcon","newIcon","cardStarIcon","earthIcon","searchIcon","backIcon","closeIcon","label","path","closeCircleIcon","checkIcon","alertIcon","reportIcon","visibilityOnIcon","visibilityOffIcon","leftArrowIcon","rightArrowIcon","plusIcon","pencilIcon","trashIcon","uploadIcon","saveIcon","swapIcon","lockQuestionIcon","emailSendIcon","loginIcon","logoutIcon","accountCardIcon","accountBoxIcon","FullList","_id","initLink","cardType","frontCard","frontCard1","backCard","backCard1","name","companyName","position","website","links","title","link","tags","categories","details","description","address","contactPerson","contactName","contactNumber","contactEmail","smsBody","createdBy","updatedBy","updated","Date","toISOString","created","expired","users","image","frontCard2","backCard2","useStyles","makeStyles","searchContainer","borderRadius","shape","backgroundColor","alpha","mode","common","white","black","marginLeft","spacing","width","padding","height","pointerEvents","display","alignItems","justifyContent","inputWrapper","color","searchInput","paddingLeft","transition","transitions","create","searchListContainer","maxHeight","overflow","background","paper","SearchBar","classes","searchList","keys","searchOptions","searchKey","setSearchKey","resultList","setResultList","searchItemHandler","event","preventDefault","className","SvgIcon","d","InputBase","type","placeholder","root","input","inputProps","onChange","target","value","searchResult","matchSorter","onBlur","length","Paper","List","map","resultItemList","ListItem","button","divider","onMouseDown","ListItemAvatar","Avatar","src","ListItemText","Math","random","AccountOption","props","isExtraSmallDevice","useMediaQuery","down","component","RouterLink","to","linkItem","linkTo","dense","onClick","optionsHandler","ListItemIcon","svgPath","SignOut","onClickHandler","signOut","AccountDropDownOptions","options","state","index","AccountDropDownOption","isAuthenticated","headerContainer","horizontalMargin","margin","verticalMargin","AccountInfo","Grid","item","container","wrap","clsx","user","Typography","variant","email","VerticalNavItems","verticalNavItemList","isActiveStyle","verticalNavItemValue","routeHistory","toggleDrawer","selected","style","useWindowSize","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","drawerContainer","up","drawerHeader","headerItems","headerItem","DrawerContainer","useTheme","drawerIsOpen","accountItemList","tabsValueHandler","isActive","history","console","log","SwipeableDrawer","anchor","onClose","open","onOpen","disableDiscovery","Divider","ListSubheader","accountItem","accountDropDownContainer","MoreOptionsContainer","withStyles","moreOptionsContainer","React","forwardRef","ref","children","rest","AccountDropDown","accountDropDownIsOpen","setAccountDropDownIsOpen","accountAnchorEl","setAccountAnchorEl","accountDropDownHandler","prev","currentTarget","popperId","dropDownIsOpen","undefined","Tooltip","TransitionComponent","Zoom","IconButton","edge","aria-describedby","disabled","ClickAwayListener","mouseEvent","touchEvent","onClickAway","Popper","id","anchorEl","popperRef","placement","Logo","Button","HorizontalNavItems","horizontalNavItemList","horizontalNavItemValue","horizontalTabsValueHandler","Tabs","centered","textColor","aria-label","arrow","Tab","icon","offset","mixins","toolbar","NavBar","withRouter","location","initLinkList","prefersDarkMode","isSmallDevice","between","isSmallMediumDevice","isMediumDevice","isLargeMediumDevice","isLargeDevice","setDrawerIsOpen","linkItemList","setHorizontalNavItemList","setHorizontalNavItemValue","setVerticalNavItemList","setVerticalNavItemValue","navItemNumber","setNavItemNumber","showSearchBar","setShowSearchBar","navItemNumberHandler","useCallback","navItemListHandler","navItems","navItemList","verticalNavItems","horizontalNavItems","splice","verticalTabsValueHandler","newValue","includes","pathname","useMemo","toggleSearchHandler","AppBar","Toolbar","accountItems","TabPanel","p","extend","OrbitControls","CameraControls","useThree","camera","domElement","gl","controls","useRef","useFrame","current","update","args","enableZoom","enablePan","NameCard","useLoader","THREE","data","frontCardTexture","BackCardTexture","scale","attach","attachArray","Card3d","onCreated","setClearColor","fallback","twoDNameCard","CardDisplayWrapper","tabValue","setTabValue","tabChangeHandler","newTabValue","cardDisplayType","scrollButtons","alt","CardMoreOption","Link","underline","rel","moreOptionsHandler","CardMoreOptions","moreOptions","chip","CardChips","CardChip","fullWidth","indicator","selectionFollowsFocus","chipProps","Chip","clickable","CardLink","href","startsWith","Facebook","YouTube","LinkedIn","WhatsApp","Instagram","actionLinkIcon","CardLinks","detailItemContainer","grey","CardDescriptionList","expanded","setExpanded","detailItem","Accordion","square","panel","newExpanded","elevation","AccordionSummary","expandIcon","ExpandMore","aria-controls","AccordionDetails","expand","transform","duration","shortest","expandOpen","CustomDialogTitle","dialogCloseButton","right","top","dialogAddButton","onAdd","DialogTitle","disableTypography","AddCircle","Cancel","CardActionLinks","Language","bookmarkHandler","Bookmark","Dialog","bookmarkIsOpen","aria-labelledby","bookmarkAddHandler","DialogContent","dividers","Phone","Email","Message","shareHandler","Share","shareIsOpen","qrCodeHandler","QrCode2","qrCodeIsOpen","handleExpandClick","aria-expanded","cardChipContainer","CustomPopper","styled","MoreOptionsOnClick","moreOptionsToggleHandler","moreOptionsIsOpen","MoreHoriz","modifiers","enabled","CardMain","cardIsExpanded","setMoreOptionsIsOpen","setAnchorEl","setBookmarkIsOpen","setShareIsOpen","setQRCodeIsOpen","Card","cardSize","minWidth","CardHeader","cardData","subheader","avatar","action","CardMedia","CardContent","CardChipsContainer","CardActions","disableSpacing","Collapse","in","timeout","unmountOnExit","SingleItem","cardContainer","marginTop","Home","justify","card","marginBottom","CardList","cardDataList","LatestCard","stepperInputContainer","InputTextRenderer","formList","formItem","fieldName","config","formObject","formChangeHandler","objectList","componentType","Autocomplete","option","renderTags","getTagProps","renderInput","params","TextField","required","validations","isRequired","error","isTouched","validity","isValid","multiline","maxRows","minRows","readOnly","multiple","freeSolo","clearIcon","close","changeType","helperText","marginRight","InputProps","endAdornment","InputAdornment","Boolean","toggleType","on","isOn","onIcon","offIcon","off","RestructureFormObject","key","fieldValidation","isEmail","match","minLength","maxLength","trim","fieldChangeHandler","inputContainer","avatarIcon","border","contentItem","Details","placeHolder","password","setUser","profilePicture","setProfilePicture","profileIsLoading","setPreviewProfile","setProfileIsValid","profileButtonIsEnabled","setProfileButtonIsEnabled","profileState","setProfileState","profileFormIsValid","setProfileFormIsValid","fileReader","FileReader","onload","result","readAsDataURL","profileRef","profileFormCompleteChangeHandler","updatedForm","formValidityList","formIsValid","editProfileHandler","copiedUser","JSON","parse","stringify","accept","pickedProfile","files","LoadingButton","startIcon","click","pendingPosition","pending","iconButton","FormObjectList","removeFormObjectHandler","flowType","stepperContainer","stepperHeader","stepperContent","completeButton","stepperInnerContent","CardDetails","front","back","activeStep","setActiveStep","completed","setCompleted","setFrontCard","setFrontCardIsLoading","previewFrontCard","setPreviewFrontCard","setFrontCardIsValid","setBackCard","backCardIsLoading","setBackCardIsLoading","previewBackCard","setPreviewBackCard","setBackCardIsValid","contactInfoIsValid","setContactInfoIsValid","companyInfoIsValid","setCompanyInfoIsValid","cardInfoIsValid","linksInfoIsValid","setLinksInfoIsValid","DetailsInfoIsValid","setDetailsInfoIsValid","frontCardRef","backCardRef","contactForm","setContactForm","role","category","companyForm","setCompanyForm","newTitle","newUrl","newLink","setNewLink","linksMapping","url","setLinks","newDescription","newDetail","setNewDetail","setDetails","pickCardHandler","cardFacade","contactObjectListCompleteHandler","detailObjectListCompleteHandler","contactFormCompleteChangeHandler","companyFormCompleteChangeHandler","detailsFormObjectListChangeHandler","arrayObjectForm","updatedList","linksFormObjectListChangeHandler","contactFormObjectChangeHandler","companyFormObjectChangeHandler","newLinkObjectChangeHandler","newDetailObjectChangeHandler","removeLinkObjectHandler","removeDetailObjectHandler","addLinkObjectHandler","mapping","copiedNewState","keyValues","Object","newKey","copiedKeyValues","assign","splitLabel","split","recreateLabel","join","copiedNewState2","cardChangeHandler","pickedFile","completedSteps","totalSteps","steps","allStepsCompleted","stepBackHandler","isLastStep","stepNextHandler","newActiveStep","findIndex","step","i","stepCompleteHandler","newCompleted","CompleteButton","infoIsValid","MobileStepper","backButton","nextButton","Stepper","nonLinear","orientation","alternativeLabel","Step","StepButton","0","1","2","3","4","fieldsIsValidHandler","User","birthDate","accountType","maxWidth","buttonSpacing","Registration","isPendingSignIn","isPendingRequestPassword","setIsPendingRequestPassword","isPendingChangeType","enteredCredential","setEnteredCredential","enteredCredentialIsValid","setEnteredCredentialIsValid","enteredCredentialIsValidHandler","fieldsIsValid","alert","setTimeout","SignUp","PrivateRoute","Component","render","from","MainRouter","exact","SignIn","App","extendedTheme","responsiveFontSizes","createMuiTheme","components","MuiPaper","defaultProps","MuiButton","disableElevation","MuiMobileStepper","styleOverrides","dotActive","basename","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userActions","initialState","SIGN_IN","curState","SIGN_OUT","resetUser","userStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aca6975.chunk.js","sourcesContent":["import { pink } from '@material-ui/core/colors';\r\n\r\nconst primaryLight = '#6573c3';\r\nconst primaryMain = '#3f51b5';\r\nconst primaryDark = '#2c387e';\r\nconst secondaryMain = '#f50057';\r\nconst secondaryLight = '#f73378';\r\nconst secondaryDark = '#ab003c';\r\n\r\nconst primaryContrastText = '#fff';\r\nconst secondaryContrastText = '#000';\r\n\r\nconst theme = {\r\n  direction: 'ltr',\r\n  palette: {\r\n    primary: {\r\n      light: primaryLight,\r\n      main: primaryMain,\r\n      dark: primaryDark,\r\n      contrastText: primaryContrastText,\r\n    },\r\n    secondary: {\r\n      light: secondaryLight,\r\n      main: secondaryMain,\r\n      dark: secondaryDark,\r\n      contrastText: secondaryContrastText,\r\n    },\r\n    openTitle: primaryMain,\r\n    protectedTitle: pink['400'],\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xxxs: 0,\r\n      xxs: 360,\r\n      xs: 480,\r\n      sm: 600,\r\n      smd: 800,\r\n      md: 960,\r\n      lmd: 1120,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import { useState, useEffect } from 'react';\r\n\r\nlet globalState = {};\r\nlet listeners = [];\r\nlet actions = {};\r\n\r\nexport const useStore = (shouldListen = true) => {\r\n  const setState = useState(globalState)[1];\r\n\r\n  const dispatch = (actionIdentifier, payload) => {\r\n    const newState = actions[actionIdentifier](globalState, payload);\r\n    globalState = { ...globalState, ...newState };\r\n\r\n    for (const listener of listeners) {\r\n      listener(globalState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (shouldListen) {\r\n      listeners.push(setState);\r\n    }\r\n\r\n    return () => {\r\n      if (shouldListen) {\r\n        listeners = listeners.filter((li) => li !== setState);\r\n      }\r\n    };\r\n  }, [setState, shouldListen]);\r\n\r\n  return [globalState, dispatch];\r\n};\r\n\r\nexport const initStore = (userActions, initialState) => {\r\n  if (initialState) {\r\n    globalState = { ...globalState, ...initialState };\r\n  }\r\n  actions = { ...actions, ...userActions };\r\n};\r\n","export const menuIcon = {\r\n  label: 'menu',\r\n  path: 'M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z',\r\n};\r\n\r\nexport const homeIcon = {\r\n  label: 'home',\r\n  path: 'M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z',\r\n};\r\n\r\nexport const newIcon = {\r\n  label: 'new',\r\n  path:\r\n    'M20,4C21.11,4 22,4.89 22,6V18C22,19.11 21.11,20 20,20H4C2.89,20 2,19.11 2,18V6C2,4.89 2.89,4 4,4H20M8.5,15V9H7.25V12.5L4.75,9H3.5V15H4.75V11.5L7.3,15H8.5M13.5,10.26V9H9.5V15H13.5V13.75H11V12.64H13.5V11.38H11V10.26H13.5M20.5,14V9H19.25V13.5H18.13V10H16.88V13.5H15.75V9H14.5V14A1,1 0 0,0 15.5,15H19.5A1,1 0 0,0 20.5,14Z',\r\n};\r\n\r\nexport const cardStarIcon = {\r\n  label: 'cardStar',\r\n  path:\r\n    'M20 22.09L22.45 23.58L21.8 20.77L24 18.89L21.11 18.64L20 16L18.87 18.64L16 18.89L18.18 20.77L17.5 23.58L20 22.09M14.08 21H2C.95 21 0 20.05 0 19V5C0 3.95 .95 3 2 3H22C23.05 3 24 3.95 24 5V15.53C22.94 14.58 21.54 14 20 14C16.69 14 14 16.69 14 20C14 20.34 14.03 20.68 14.08 21M8 13.91C6 13.91 2 15 2 17V18H14V17C14 15 10 13.91 8 13.91M8 6C6.35 6 5 7.35 5 9C5 10.65 6.35 12 8 12C9.65 12 11 10.65 11 9C11 7.35 9.65 6 8 6M21 10H14V11H21V10M22 8H14V9H22V8M22 6H14V7H22V6Z',\r\n};\r\n\r\nexport const earthIcon = {\r\n  label: 'earth',\r\n  path:\r\n    'M17.9,17.39C17.64,16.59 16.89,16 16,16H15V13A1,1 0 0,0 14,12H8V10H10A1,1 0 0,0 11,9V7H13A2,2 0 0,0 15,5V4.59C17.93,5.77 20,8.64 20,12C20,14.08 19.2,15.97 17.9,17.39M11,19.93C7.05,19.44 4,16.08 4,12C4,11.38 4.08,10.78 4.21,10.21L9,15V16A2,2 0 0,0 11,18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z',\r\n};\r\n\r\nexport const searchIcon = {\r\n  label: 'search',\r\n  path:\r\n    'M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z',\r\n};\r\n\r\nexport const backIcon = {\r\n  label: 'back',\r\n  path:\r\n    'M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z',\r\n};\r\n\r\nexport const closeIcon = {\r\n  label: 'close',\r\n  path:\r\n    'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z',\r\n};\r\n\r\nexport const closeCircleIcon = {\r\n  label: 'closeCircle',\r\n  path:\r\n    'M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z',\r\n};\r\n\r\nexport const closeCircleOutlineIcon = {\r\n  label: 'closeCircleOutline',\r\n  path:\r\n    'M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z',\r\n};\r\n\r\nexport const checkIcon = {\r\n  label: 'check',\r\n  path:\r\n    'M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z',\r\n};\r\n\r\nexport const alertIcon = {\r\n  label: 'alert',\r\n  path:\r\n    'M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z',\r\n};\r\n\r\nexport const reportIcon = {\r\n  label: 'report',\r\n  path:\r\n    'M13 13H11V7H13M11 15H13V17H11M15.73 3H8.27L3 8.27V15.73L8.27 21H15.73L21 15.73V8.27L15.73 3Z',\r\n};\r\n\r\nexport const visibilityOnIcon = {\r\n  label: 'visibilityOn',\r\n  path:\r\n    'M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z',\r\n};\r\n\r\nexport const visibilityOffIcon = {\r\n  label: 'visibilityOff',\r\n  path:\r\n    'M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.08L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.74,7.13 11.35,7 12,7Z',\r\n};\r\n\r\nexport const leftArrowIcon = {\r\n  label: 'leftArrow',\r\n  path:\r\n    'M22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12M7,12L12,17V14H16V10H12V7L7,12Z',\r\n};\r\n\r\nexport const rightArrowIcon = {\r\n  label: 'rightArrow',\r\n  path:\r\n    'M2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12M17,12L12,7V10H8V14H12V17L17,12Z',\r\n};\r\n\r\nexport const plusIcon = {\r\n  label: 'plus',\r\n  path:\r\n    'M17,13H13V17H11V13H7V11H11V7H13V11H17M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z',\r\n};\r\n\r\nexport const pencilIcon = {\r\n  label: 'pencil',\r\n  path:\r\n    'M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z',\r\n};\r\n\r\nexport const trashIcon = {\r\n  label: 'trash',\r\n  path:\r\n    'M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z',\r\n};\r\n\r\nexport const uploadIcon = {\r\n  label: 'upload',\r\n  path: 'M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z',\r\n};\r\n\r\nexport const saveIcon = {\r\n  label: 'save',\r\n  path:\r\n    'M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z',\r\n};\r\n\r\nexport const swapIcon = {\r\n  label: 'swap',\r\n  path: 'M8,10V13H14V18H8V21L2,15.5L8,10M22,8.5L16,3V6H10V11H16V14L22,8.5Z',\r\n};\r\n\r\nexport const lockQuestionIcon = {\r\n  label: 'lock-question',\r\n  path:\r\n    'M12,1A5,5 0 0,0 7,6V8H6A2,2 0 0,0 4,10V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V10A2,2 0 0,0 18,8H17V6A5,5 0 0,0 12,1M12,2.9C13.71,2.9 15.1,4.29 15.1,6V8H8.9V6C8.9,4.29 10.29,2.9 12,2.9M12.19,10.5C13.13,10.5 13.88,10.71 14.42,11.12C14.96,11.54 15.23,12.1 15.23,12.8C15.23,13.24 15.08,13.63 14.79,14C14.5,14.36 14.12,14.64 13.66,14.85C13.4,15 13.23,15.15 13.14,15.32C13.05,15.5 13,15.72 13,16H11C11,15.5 11.1,15.16 11.29,14.92C11.5,14.68 11.84,14.4 12.36,14.08C12.62,13.94 12.83,13.76 13,13.54C13.14,13.33 13.22,13.08 13.22,12.8C13.22,12.5 13.13,12.28 12.95,12.11C12.77,11.93 12.5,11.85 12.19,11.85C11.92,11.85 11.7,11.92 11.5,12.06C11.34,12.2 11.24,12.41 11.24,12.69H9.27C9.22,12 9.5,11.4 10.05,11.04C10.59,10.68 11.3,10.5 12.19,10.5M11,17H13V19H11V17Z',\r\n};\r\n\r\nexport const lockOpenIcon = {\r\n  label: 'lock-open',\r\n  path:\r\n    'M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V10A2,2 0 0,1 6,8H15V6A3,3 0 0,0 12,3A3,3 0 0,0 9,6H7A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,17A2,2 0 0,0 14,15A2,2 0 0,0 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17Z',\r\n};\r\n\r\nexport const emailSendIcon = {\r\n  label: 'email-send',\r\n  path:\r\n    'M13 17H17V14L22 18.5L17 23V20H13V17M20 4H4A2 2 0 0 0 2 6V18A2 2 0 0 0 4 20H11.35A5.8 5.8 0 0 1 11 18A6 6 0 0 1 22 14.69V6A2 2 0 0 0 20 4M20 8L12 13L4 8V6L12 11L20 6Z',\r\n};\r\n\r\nexport const loginIcon = {\r\n  label: 'login',\r\n  path:\r\n    'M10,17V14H3V10H10V7L15,12L10,17M10,2H19A2,2 0 0,1 21,4V20A2,2 0 0,1 19,22H10A2,2 0 0,1 8,20V18H10V20H19V4H10V6H8V4A2,2 0 0,1 10,2Z',\r\n};\r\n\r\nexport const logoutIcon = {\r\n  label: 'logout',\r\n  path:\r\n    'M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z',\r\n};\r\n\r\nexport const accountCardIcon = {\r\n  label: 'accountCard',\r\n  path:\r\n    'M2,3H22C23.05,3 24,3.95 24,5V19C24,20.05 23.05,21 22,21H2C0.95,21 0,20.05 0,19V5C0,3.95 0.95,3 2,3M14,6V7H22V6H14M14,8V9H21.5L22,9V8H14M14,10V11H21V10H14M8,13.91C6,13.91 2,15 2,17V18H14V17C14,15 10,13.91 8,13.91M8,6A3,3 0 0,0 5,9A3,3 0 0,0 8,12A3,3 0 0,0 11,9A3,3 0 0,0 8,6Z',\r\n};\r\n\r\nexport const accountBoxIcon = {\r\n  label: 'accountBox',\r\n  path:\r\n    'M6,17C6,15 10,13.9 12,13.9C14,13.9 18,15 18,17V18H6M15,9A3,3 0 0,1 12,12A3,3 0 0,1 9,9A3,3 0 0,1 12,6A3,3 0 0,1 15,9M3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3H5C3.89,3 3,3.9 3,5Z',\r\n};\r\n","export default __webpack_public_path__ + \"static/media/chinese-business-card-translation-samples-intel-445-eng.d26d00e8.jpg\";","export default __webpack_public_path__ + \"static/media/chinese-business-card-translation-samples-intel-445-sch.a17d7330.jpg\";","export default __webpack_public_path__ + \"static/media/front.711f169a.png\";","export default __webpack_public_path__ + \"static/media/back.370041f5.png\";","import frontCard1 from '../../assets/chinese-business-card-translation-samples-intel-445-eng.jpg';\r\nimport backCard1 from '../../assets/chinese-business-card-translation-samples-intel-445-sch.jpg';\r\nimport frontCard2 from '../../assets/front.png';\r\nimport backCard2 from '../../assets/back.png';\r\n\r\nexport const FullList = [\r\n  {\r\n    _id: 'abcd1234',\r\n    initLink: 'bob-swan',\r\n    cardType: 'public',\r\n    frontCard: frontCard1,\r\n    backCard: backCard1,\r\n    name: 'Bob Swan',\r\n    companyName: 'Intel Corporation',\r\n    position: 'Software Engineer',\r\n    website: 'https://material-ui.com/',\r\n    links: [\r\n      { title: 'Like me from Facebook', link: 'https://www.facebook.com/' },\r\n      {\r\n        title: 'Subscribe me from Youtube',\r\n        link: 'https://www.youtube.com/',\r\n      },\r\n      {\r\n        title: 'See my website for more info',\r\n        link: 'https://material-ui.com/',\r\n      },\r\n    ],\r\n    tags: [\r\n      'Semiconductor',\r\n      'Intel',\r\n      'Bob Swan',\r\n      'Intel Inside',\r\n      'Sponsors of Tomorrow',\r\n      'Look Inside',\r\n      \"Experience What's Inside\",\r\n      'Semiconductor',\r\n      'Intel',\r\n      'Bob Swan',\r\n      'Intel Inside',\r\n      'Sponsors of Tomorrow',\r\n      'Look Inside',\r\n      \"Experience What's Inside\",\r\n    ],\r\n    categories: 'Hardware Manufacture',\r\n    details: [\r\n      {\r\n        title: 'Background',\r\n        description:\r\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      },\r\n      {\r\n        title: 'Summary',\r\n        description:\r\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      },\r\n    ],\r\n    address: ['KLCC'],\r\n    contactPerson: {\r\n      contactName: 'Bob Swan',\r\n      contactNumber: '+60 198765432',\r\n      contactEmail: 'chrismartin@gmail.com',\r\n      smsBody: 'Hello, Bob!',\r\n    },\r\n    createdBy: 'Bob Swan',\r\n    updatedBy: 'Bob Swan',\r\n    updated: new Date().toISOString(),\r\n    created: new Date().toISOString(),\r\n    expired: new Date().toISOString(),\r\n    users: {\r\n      name: 'bob-swan',\r\n      image:\r\n        'https://image.cnbcfm.com/api/v1/image/105700823-1548437122945swan.jpg?v=1574872944',\r\n    },\r\n  },\r\n  {\r\n    _id: 'abcd2234',\r\n    initLink: 'mark-zuckerberg',\r\n    cardType: 'public',\r\n    frontCard: frontCard2,\r\n    backCard: backCard2,\r\n    name: 'Mark Zuckerberg',\r\n    companyName: 'Facebook, Inc.',\r\n    position: 'Software Engineer',\r\n    website: 'https://material-ui.com/',\r\n    links: [\r\n      { title: 'Like me from Facebook', link: 'https://www.facebook.com/' },\r\n      {\r\n        title: 'Subscribe me from Youtube',\r\n        link: 'https://www.youtube.com/',\r\n      },\r\n      {\r\n        title: 'See my website for more info',\r\n        link: 'https://material-ui.com/',\r\n      },\r\n    ],\r\n    tags: [\r\n      'Semiconductor',\r\n      'Intel',\r\n      'Bob Swan',\r\n      'Intel Inside',\r\n      'Sponsors of Tomorrow',\r\n      'Look Inside',\r\n      \"Experience What's Inside\",\r\n      'Semiconductor',\r\n      'Intel',\r\n      'Bob Swan',\r\n      'Intel Inside',\r\n      'Sponsors of Tomorrow',\r\n      'Look Inside',\r\n      \"Experience What's Inside\",\r\n    ],\r\n    categories: 'Hardware Manufacture',\r\n    details: [\r\n      {\r\n        title: 'Background',\r\n        description:\r\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      },\r\n      {\r\n        title: 'Summary',\r\n        description:\r\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      },\r\n    ],\r\n    address: ['KLCC'],\r\n    contactPerson: {\r\n      contactName: 'Mark Zukerberg',\r\n      contactNumber: '+60 198765432',\r\n      contactEmail: 'chrismartin@gmail.com',\r\n      smsBody: 'Hello, Mark!',\r\n    },\r\n    createdBy: 'Mark Zuckerberg',\r\n    updatedBy: 'Mark Zukerberg',\r\n    updated: new Date().toISOString(),\r\n    created: new Date().toISOString(),\r\n    expired: new Date().toISOString(),\r\n    users: {\r\n      name: 'Mark Zuckerberg',\r\n      image:\r\n        'https://static01.nyt.com/images/2020/11/17/business/17techhearing-facebookpreview/merlin_163192374_92604511-ae28-43ba-8d7f-d3fbdae53e01-mobileMasterAt3x.jpg',\r\n    },\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { matchSorter } from 'match-sorter';\r\nimport {\r\n  InputBase,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  SvgIcon,\r\n} from '@material-ui/core';\r\nimport { makeStyles, alpha } from '@material-ui/core/styles';\r\n\r\nimport { searchIcon } from '../../assets/svg/SvgIcons';\r\nimport { FullList } from '../Demo/FullList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchContainer: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(\r\n      theme.palette.mode === 'dark'\r\n        ? theme.palette.common.white\r\n        : theme.palette.common.black,\r\n      0.15\r\n    ),\r\n    '&:hover': {\r\n      backgroundColor: alpha(\r\n        theme.palette.mode === 'dark'\r\n          ? theme.palette.common.white\r\n          : theme.palette.common.black,\r\n        0.25\r\n      ),\r\n    },\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputWrapper: {\r\n    color: 'inherit',\r\n  },\r\n  searchInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '12ch',\r\n    '&:focus': {\r\n      width: '24ch',\r\n    },\r\n    position: 'relative',\r\n  },\r\n  searchListContainer: {\r\n    position: 'absolute',\r\n    maxHeight: 600,\r\n    overflow: 'auto',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst SearchBar = () => {\r\n  const classes = useStyles();\r\n  const [searchList, setSearchList] = useState(FullList);\r\n\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    // isCaseSensitive: false,\r\n    // includeScore: false,\r\n    // shouldSort: true,\r\n    // includeMatches: false,\r\n    // findAllMatches: false,\r\n    // minMatchCharLength: 1,\r\n    // location: 0,\r\n    // threshold: 0.6,\r\n    // distance: 100,\r\n    // useExtendedSearch: false,\r\n    // ignoreLocation: false,\r\n    // ignoreFieldNorm: false,\r\n    keys: [\r\n      'initLink',\r\n      // 'name',\r\n      // 'companyName',\r\n      // 'position',\r\n      // (list) => list.links.map((link) => link.title),\r\n      // (list) => list.links.map((link) => link.link),\r\n      // '[tags]',\r\n      // 'categories',\r\n      // (list) => list.details.map((detail) => detail.title),\r\n      // (list) => list.details.map((detail) => detail.description),\r\n      // 'address',\r\n      'contactPerson.contactName',\r\n      'contactPerson.contactNumber',\r\n      'contactPerson.contactEmail',\r\n    ],\r\n  });\r\n\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const [resultList, setResultList] = useState([]);\r\n\r\n  const searchKeyHandler = (event) => {\r\n    setSearchKey(event.target.value);\r\n    // const fuse = new Fuse(searchList, searchOptions);\r\n    // const searchResult = fuse.search(searchKey);\r\n    // setResultList(searchResult);\r\n    const searchResult = matchSorter(searchList, searchKey, searchOptions);\r\n    setResultList(searchResult);\r\n  };\r\n\r\n  const resetSearchHandler = () => {\r\n    setSearchKey('');\r\n    setResultList([]);\r\n  };\r\n\r\n  const searchItemHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.searchContainer}>\r\n        <div className={classes.searchIcon}>\r\n          <SvgIcon>\r\n            <path d={searchIcon.path} />\r\n          </SvgIcon>\r\n        </div>\r\n        <InputBase\r\n          type=\"text\"\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputWrapper,\r\n            input: classes.searchInput,\r\n          }}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          onChange={searchKeyHandler}\r\n          onBlur={resetSearchHandler}\r\n          value={searchKey}\r\n        />\r\n        {resultList.length > 0 ? (\r\n          <Paper className={classes.searchListContainer}>\r\n            <List>\r\n              {resultList.map((resultItemList) => (\r\n                <ListItem\r\n                  button\r\n                  divider\r\n                  key={Math.random()}\r\n                  onMouseDown={searchItemHandler}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar src={resultItemList.users.image} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={`${resultItemList.contactPerson.contactName}`}\r\n                    secondary={`${resultItemList.contactPerson.contactNumber}`}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Link,\r\n  Avatar,\r\n  SvgIcon,\r\n  ListItemAvatar,\r\n  ListItemIcon,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst AccountOption = (props) => {\r\n  const isExtraSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('sm')\r\n  );\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      component={RouterLink}\r\n      to={`/${props.linkItem.linkTo}`}\r\n      divider\r\n      dense={!isExtraSmallDevice}\r\n      onClick={props.optionsHandler}\r\n    >\r\n      <ListItemIcon>\r\n        {/* <Avatar>{actionLink(props.linkItem.label)}</Avatar> */}\r\n        <SvgIcon>\r\n          <path d={props.linkItem.svgPath} />\r\n        </SvgIcon>\r\n      </ListItemIcon>\r\n      <ListItemText primary={props.linkItem.name} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default AccountOption;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  SvgIcon,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport { logoutIcon } from '../../assets/svg/SvgIcons';\r\nimport { useStore } from '../../hooks/store';\r\n\r\nconst SignOut = (props) => {\r\n  const { onClickHandler } = props;\r\n  const isExtraSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('sm')\r\n  );\r\n  const [state, dispatch] = useStore(true);\r\n\r\n  const [signOut, setSignOut] = useState({\r\n    name: 'Sign Out',\r\n    label: 'signout',\r\n    svgPath: logoutIcon.path,\r\n    type: 'authenticated',\r\n  });\r\n\r\n  const signOutHandler = () => {\r\n    onClickHandler();\r\n    dispatch('SIGN_OUT');\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      divider\r\n      dense={!isExtraSmallDevice}\r\n      onClick={signOutHandler}\r\n    >\r\n      <ListItemIcon>\r\n        <SvgIcon>\r\n          <path d={signOut.svgPath} />\r\n        </SvgIcon>\r\n      </ListItemIcon>\r\n      <ListItemText primary={signOut.name} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default SignOut;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\n\r\nimport AccountDropDownOption from './AccountDropDownOption';\r\nimport { useStore } from '../../hooks/store';\r\nimport SignOut from './SignOut';\r\n\r\nconst AccountDropDownOptions = (props) => {\r\n  const { optionsHandler, options } = props;\r\n\r\n  const [state, dispatch] = useStore(true);\r\n\r\n  return (\r\n    <List>\r\n      {options.map((linkItem, index) => (\r\n        <AccountDropDownOption\r\n          key={Math.random()}\r\n          linkItem={linkItem}\r\n          optionsHandler={optionsHandler}\r\n        />\r\n      ))}\r\n      {state.isAuthenticated ? (\r\n        <SignOut onClickHandler={optionsHandler} />\r\n      ) : null}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default AccountDropDownOptions;\r\n","import React, { useState } from 'react';\r\nimport { Grid, Avatar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nimport { useStore } from '../../hooks/store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerContainer: {\r\n    height: 100,\r\n  },\r\n  horizontalMargin: { margin: `0 ${theme.spacing(2)}` },\r\n  verticalMargin: { margin: `${theme.spacing(1)} 0` },\r\n}));\r\n\r\nconst AccountInfo = (props) => {\r\n  const [state, dispatch] = useStore(true);\r\n  const { direction } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item>\r\n      <Grid\r\n        container\r\n        direction={direction}\r\n        justifyContent={direction === 'row' ? 'flex-start' : 'center'}\r\n        alignItems={direction === 'row' ? 'center' : 'flex-start'}\r\n        wrap=\"nowrap\"\r\n        className={clsx({\r\n          [classes.headerContainer]: direction === 'row',\r\n          [classes.horizontalMargin]: direction === 'column',\r\n        })}\r\n      >\r\n        <Grid\r\n          item\r\n          className={clsx({\r\n            [classes.horizontalMargin]: direction === 'row',\r\n            [classes.verticalMargin]: direction === 'column',\r\n          })}\r\n        >\r\n          <Avatar src={state.isAuthenticated ? state.user.image : null} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          className={clsx({ [classes.verticalMargin]: direction === 'column' })}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"subtitle1\">\r\n              {state.isAuthenticated ? state.user.name : 'Guest'}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"subtitle2\">\r\n              {state.isAuthenticated ? state.user.email : 'Not Sign In'}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React from 'react';\r\nimport {\r\n  ListItem,\r\n  SvgIcon,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst VerticalNavItems = (props) => {\r\n  const {\r\n    verticalNavItemList,\r\n    verticalNavItemValue,\r\n    isActiveStyle,\r\n    routeHistory,\r\n    toggleDrawer,\r\n  } = props;\r\n\r\n  const isExtraSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('sm')\r\n  );\r\n\r\n  return verticalNavItemList.map((linkItem) => (\r\n    <ListItem\r\n      button\r\n      key={`${linkItem.label}`}\r\n      selected={routeHistory === `/${linkItem.linkTo}`}\r\n      component={RouterLink}\r\n      to={`/${linkItem.linkTo}`}\r\n      style={isActiveStyle(routeHistory, `/${linkItem.linkTo}`)}\r\n      onClick={toggleDrawer}\r\n      dense={!isExtraSmallDevice}\r\n    >\r\n      <ListItemIcon>\r\n        <SvgIcon style={isActiveStyle(routeHistory, `/${linkItem.linkTo}`)}>\r\n          <path d={linkItem.svgPath} />\r\n        </SvgIcon>\r\n      </ListItemIcon>\r\n      <ListItemText primary={linkItem.name} />\r\n    </ListItem>\r\n  ));\r\n};\r\n\r\nexport default VerticalNavItems;\r\n","import React, { useLayoutEffect, useState } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setSize({ width: window.innerWidth, height: window.innerHeight });\r\n    };\r\n\r\n    window.addEventListener('resize', updateSize);\r\n\r\n    updateSize();\r\n\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n\r\n  return size;\r\n};\r\n\r\nexport default useWindowSize;\r\n\r\nfunction ShowWindowDimensions(props) {\r\n  const [width, height] = useWindowSize();\r\n  return (\r\n    <span>\r\n      Window size: {width} x {height}\r\n    </span>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  SwipeableDrawer,\r\n  Grid,\r\n  Divider,\r\n  useMediaQuery,\r\n  List,\r\n  ListSubheader,\r\n  ListItem,\r\n  ListItemIcon,\r\n  SvgIcon,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport AccountInfo from './AccountInfo';\r\nimport VerticalNavItems from './VerticalNavItems';\r\nimport { useStore } from '../../hooks/store';\r\nimport SignOut from './SignOut';\r\nimport useWindowSize from '../../hooks/useWindowSize';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerContainer: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n    },\r\n    [theme.breakpoints.up('sm')]: { width: 256 },\r\n  },\r\n  drawerHeader: { height: 150 },\r\n  headerItems: { margin: `0 ${theme.spacing(2)}` },\r\n  headerItem: { margin: `${theme.spacing(3)} 0` },\r\n}));\r\n\r\nconst DrawerContainer = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { width, height } = useWindowSize();\r\n  const isExtraSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('sm')\r\n  );\r\n  const [state, dispatch] = useStore();\r\n  const {\r\n    toggleDrawer,\r\n    drawerIsOpen,\r\n    accountItemList,\r\n    tabsValueHandler,\r\n    verticalNavItemList,\r\n    verticalNavItemValue,\r\n    isActive,\r\n    history,\r\n  } = props;\r\n\r\n  console.log(height, width);\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor={\r\n        isExtraSmallDevice\r\n          ? 'bottom'\r\n          : theme.direction === 'rtl'\r\n          ? 'right'\r\n          : 'left'\r\n      }\r\n      onClose={toggleDrawer}\r\n      open={drawerIsOpen}\r\n      onOpen={toggleDrawer}\r\n      disableDiscovery={false}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        className={classes.drawerContainer}\r\n        style={{ height: isExtraSmallDevice ? height / 2 : height }}\r\n        wrap=\"nowrap\"\r\n      >\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            wrap=\"nowrap\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"flex-start\"\r\n            className={classes.drawerHeader}\r\n          >\r\n            <AccountInfo direction=\"column\" />\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <List>\r\n          {verticalNavItemList.length > 0 ? (\r\n            <Grid item>\r\n              <VerticalNavItems\r\n                accountItemList={accountItemList}\r\n                verticalNavItemList={verticalNavItemList}\r\n                verticalNavItemValue={verticalNavItemValue}\r\n                toggleDrawer={toggleDrawer}\r\n                isActiveStyle={isActive}\r\n                routeHistory={history}\r\n              />\r\n              <Divider />\r\n            </Grid>\r\n          ) : null}\r\n          {isExtraSmallDevice ? (\r\n            <>\r\n              <ListSubheader>Account</ListSubheader>\r\n              {accountItemList.map((accountItem) => (\r\n                <ListItem\r\n                  button\r\n                  key={`${accountItem.label}`}\r\n                  selected={history === `/${accountItem.linkTo}`}\r\n                  component={RouterLink}\r\n                  to={`/${accountItem.linkTo}`}\r\n                  style={isActive(history, `/${accountItem.linkTo}`)}\r\n                  onClick={toggleDrawer}\r\n                  dense={!isExtraSmallDevice}\r\n                >\r\n                  <ListItemIcon>\r\n                    <SvgIcon\r\n                      style={isActive(history, `/${accountItem.linkTo}`)}\r\n                    >\r\n                      <path d={accountItem.svgPath} />\r\n                    </SvgIcon>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={accountItem.name} />\r\n                </ListItem>\r\n              ))}\r\n              {state.isAuthenticated ? (\r\n                <SignOut onClickHandler={toggleDrawer} />\r\n              ) : null}\r\n              <Divider />\r\n            </>\r\n          ) : null}\r\n        </List>\r\n      </Grid>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nexport default DrawerContainer;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  Tooltip,\r\n  IconButton,\r\n  Avatar,\r\n  ClickAwayListener,\r\n  Popper,\r\n  Zoom,\r\n  Divider,\r\n  Paper,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { useStore } from '../../hooks/store';\r\nimport AccountDropDownOptions from './AccountDropDownOptions';\r\nimport AccountInfo from './AccountInfo';\r\nimport DrawerContainer from './DrawerContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accountDropDownContainer: {\r\n    width: 300,\r\n  },\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  moreOptionsContainer: {},\r\n});\r\n\r\nconst MoreOptionsContainer = withStyles(styles)(\r\n  React.forwardRef((props, ref) => {\r\n    const { classes, children, ...rest } = props;\r\n    return (\r\n      <Paper className={classes.moreOptionsContainer} {...rest}>\r\n        {children}\r\n      </Paper>\r\n    );\r\n  })\r\n);\r\n\r\nconst AccountDropDown = (props) => {\r\n  const {\r\n    accountItemList,\r\n    toggleDrawer,\r\n    drawerIsOpen,\r\n    tabsValueHandler,\r\n    verticalNavItemList,\r\n    verticalNavItemValue,\r\n    isActive,\r\n    history,\r\n  } = props;\r\n\r\n  const [state, dispatch] = useStore(true);\r\n  const [accountDropDownIsOpen, setAccountDropDownIsOpen] = useState(false);\r\n  const [accountAnchorEl, setAccountAnchorEl] = useState(null);\r\n\r\n  const classes = useStyles();\r\n  const isExtraSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('sm')\r\n  );\r\n\r\n  const accountDropDownHandler = (event) => {\r\n    setAccountDropDownIsOpen((prev) => !prev);\r\n    setAccountAnchorEl(accountAnchorEl ? null : event.currentTarget);\r\n  };\r\n\r\n  const popperId = props.dropDownIsOpen\r\n    ? 'account-drop-down-popper'\r\n    : undefined;\r\n\r\n  return (\r\n    <Grid item>\r\n      <Tooltip TransitionComponent={Zoom} title=\"Account\">\r\n        <IconButton\r\n          edge={false}\r\n          aria-describedby={popperId}\r\n          style={{ padding: 0 }}\r\n          onClick={isExtraSmallDevice ? toggleDrawer : accountDropDownHandler}\r\n          ref={accountAnchorEl}\r\n          disabled={accountDropDownIsOpen}\r\n          size={isExtraSmallDevice ? 'medium' : 'small'}\r\n        >\r\n          <Avatar src={state.isAuthenticated ? state.user.image : null} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      {isExtraSmallDevice ? (\r\n        <DrawerContainer\r\n          accountItemList={accountItemList}\r\n          toggleDrawer={toggleDrawer}\r\n          drawerIsOpen={drawerIsOpen}\r\n          tabsValueHandler={tabsValueHandler}\r\n          verticalNavItemList={verticalNavItemList}\r\n          verticalNavItemValue={verticalNavItemValue}\r\n          isActive={isActive}\r\n          history={history}\r\n        />\r\n      ) : (\r\n        <ClickAwayListener\r\n          mouseEvent=\"onMouseDown\"\r\n          touchEvent=\"onTouchStart\"\r\n          onClickAway={accountDropDownHandler}\r\n        >\r\n          <Popper\r\n            id={popperId}\r\n            open={accountDropDownIsOpen}\r\n            anchorEl={accountAnchorEl}\r\n            popperRef={accountAnchorEl}\r\n            placement=\"bottom-end\"\r\n          >\r\n            <MoreOptionsContainer className={classes.accountDropDownContainer}>\r\n              <AccountInfo direction=\"row\" />\r\n              <Divider />\r\n              <AccountDropDownOptions\r\n                options={accountItemList}\r\n                optionsHandler={accountDropDownHandler}\r\n              />\r\n            </MoreOptionsContainer>\r\n          </Popper>\r\n        </ClickAwayListener>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AccountDropDown;\r\n","import React from 'react';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst Logo = (props) => {\r\n  const { tabsValueHandler, isActiveStyle, routeHistory } = props;\r\n  return (\r\n    <Button\r\n      component={RouterLink}\r\n      to=\"/\"\r\n      style={isActiveStyle(routeHistory, '/')}\r\n      color=\"inherit\"\r\n      onClick={tabsValueHandler}\r\n    >\r\n      <Typography variant=\"h6\">Initcard</Typography>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Tabs, Tooltip, Zoom, Tab, SvgIcon } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst HorizontalNavItems = (props) => {\r\n  const {\r\n    horizontalNavItemList,\r\n    horizontalNavItemValue,\r\n    horizontalTabsValueHandler,\r\n  } = props;\r\n  return (\r\n    <Tabs\r\n      centered\r\n      value={horizontalNavItemValue}\r\n      onChange={horizontalTabsValueHandler}\r\n      textColor=\"secondary\"\r\n      aria-label=\"icon label tabs\"\r\n    >\r\n      {horizontalNavItemList.map((linkItem) => {\r\n        return (\r\n          <Tooltip\r\n            key={`${linkItem.label}`}\r\n            arrow\r\n            TransitionComponent={Zoom}\r\n            title={linkItem.name}\r\n            value={`/${linkItem.label}`}\r\n          >\r\n            <Tab\r\n              component={RouterLink}\r\n              to={`/${linkItem.linkTo}`}\r\n              icon={\r\n                <SvgIcon>\r\n                  <path d={`${linkItem.svgPath}`} />\r\n                </SvgIcon>\r\n              }\r\n            />\r\n          </Tooltip>\r\n        );\r\n      })}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default HorizontalNavItems;\r\n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  SvgIcon,\r\n  Grid,\r\n  Tooltip,\r\n  Zoom,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useStore } from '../../hooks/store';\r\n\r\nimport {\r\n  menuIcon,\r\n  searchIcon,\r\n  backIcon,\r\n  emailSendIcon,\r\n  loginIcon,\r\n  accountBoxIcon,\r\n  accountCardIcon,\r\n  newIcon,\r\n  cardStarIcon,\r\n  earthIcon,\r\n} from '../../assets/svg/SvgIcons';\r\nimport SearchBar from './SearchBar';\r\nimport AccountDropDown from './AccountDropDown';\r\nimport Logo from './Logo';\r\nimport HorizontalNavItems from './HorizontalNavItems';\r\nimport DrawerContainer from './DrawerContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  offset: theme.mixins.toolbar,\r\n}));\r\n\r\nconst NavBar = withRouter(({ history, location }, props) => {\r\n  const initLinkList = [\r\n    {\r\n      name: 'Latest',\r\n      label: 'latest',\r\n      linkTo: 'latest',\r\n      svgPath: newIcon.path,\r\n      type: 'public',\r\n    },\r\n    {\r\n      name: 'Featured',\r\n      label: 'featured',\r\n      linkTo: 'featured',\r\n      svgPath: cardStarIcon.path,\r\n      type: 'public',\r\n    },\r\n    {\r\n      name: 'Regions',\r\n      label: 'regions',\r\n      linkTo: 'regions',\r\n      svgPath: earthIcon.path,\r\n      type: 'public',\r\n    },\r\n    {\r\n      name: 'Test 1',\r\n      label: 'test1',\r\n      linkTo: 'test1',\r\n      svgPath: earthIcon.path,\r\n      type: 'public',\r\n    },\r\n    {\r\n      name: 'Test 2',\r\n      label: 'test2',\r\n      linkTo: 'test2',\r\n      svgPath: earthIcon.path,\r\n      type: 'public',\r\n    },\r\n    {\r\n      name: 'Account Details',\r\n      label: 'accountDetails',\r\n      linkTo: 'account',\r\n      svgPath: accountBoxIcon.path,\r\n      type: 'authenticated',\r\n    },\r\n    {\r\n      name: 'Create Card',\r\n      label: 'createCard',\r\n      linkTo: 'card',\r\n      svgPath: accountCardIcon.path,\r\n      type: 'authenticated',\r\n    },\r\n    {\r\n      name: 'Sign Up',\r\n      label: 'signup',\r\n      linkTo: 'signup',\r\n      svgPath: emailSendIcon.path,\r\n      type: 'unauthenticated',\r\n    },\r\n    {\r\n      name: 'Sign In',\r\n      label: 'signin',\r\n      linkTo: 'signin',\r\n      svgPath: loginIcon.path,\r\n      type: 'unauthenticated',\r\n    },\r\n  ];\r\n  const theme = useTheme();\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n  const isExtraSmallDevice = useMediaQuery((theme) => {\r\n    return theme.breakpoints.down('sm');\r\n  });\r\n  const isSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.between('sm', 'smd')\r\n  );\r\n  const isSmallMediumDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.between('smd', 'md')\r\n  );\r\n  const isMediumDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.between('md', 'lmd')\r\n  );\r\n  const isLargeMediumDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.between('lmd', 'lg')\r\n  );\r\n  const isLargeDevice = useMediaQuery((theme) => theme.breakpoints.up('lg'));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [state, dispatch] = useStore(true);\r\n\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const [linkItemList, setLinkItemList] = useState(initLinkList);\r\n\r\n  const [horizontalNavItemList, setHorizontalNavItemList] = useState([]);\r\n  const [horizontalNavItemValue, setHorizontalNavItemValue] = useState(false);\r\n\r\n  const [verticalNavItemList, setVerticalNavItemList] = useState([]);\r\n  const [verticalNavItemValue, setVerticalNavItemValue] = useState(false);\r\n\r\n  const [navItemNumber, setNavItemNumber] = useState(0);\r\n\r\n  const [showSearchBar, setShowSearchBar] = useState(false);\r\n\r\n  const navItemNumberHandler = useCallback(() => {\r\n    // console.log('setNavItemNumber');\r\n\r\n    isExtraSmallDevice && setNavItemNumber(0);\r\n    isSmallDevice && setNavItemNumber(1);\r\n    isSmallMediumDevice && setNavItemNumber(2);\r\n    isMediumDevice && setNavItemNumber(3);\r\n    isLargeMediumDevice && setNavItemNumber(4);\r\n    isLargeDevice && setNavItemNumber(5);\r\n  }, [\r\n    isExtraSmallDevice,\r\n    isSmallDevice,\r\n    isSmallMediumDevice,\r\n    isMediumDevice,\r\n    isLargeMediumDevice,\r\n    isLargeDevice,\r\n  ]);\r\n\r\n  const navItemListHandler = useCallback(\r\n    (navItems) => {\r\n      if (linkItemList.length > 0) {\r\n        const copiedLinkItemList = [...linkItemList];\r\n        const navItemList = copiedLinkItemList.filter(\r\n          (linkItem) => linkItem.type === 'public'\r\n        );\r\n\r\n        let verticalNavItems = [];\r\n        let horizontalNavItems = [];\r\n        if (navItems > 0) {\r\n          horizontalNavItems = navItemList.splice(0, navItems);\r\n          verticalNavItems = navItemList;\r\n        } else {\r\n          verticalNavItems = navItemList;\r\n        }\r\n\r\n        setHorizontalNavItemList(horizontalNavItems);\r\n        setVerticalNavItemValue(false);\r\n        setVerticalNavItemList(verticalNavItems);\r\n        setHorizontalNavItemValue(false);\r\n      }\r\n    },\r\n    [linkItemList]\r\n  );\r\n\r\n  const verticalTabsValueHandler = useCallback(\r\n    (event, newValue) => {\r\n      const tabsValue = verticalNavItemList.map(\r\n        (linkItem) => `/${linkItem.label}`\r\n      );\r\n\r\n      const pathIsExistInTabs = tabsValue.includes(newValue);\r\n\r\n      if (!pathIsExistInTabs) {\r\n        setVerticalNavItemValue(false);\r\n      } else {\r\n        setHorizontalNavItemValue(false);\r\n        setVerticalNavItemValue(newValue);\r\n      }\r\n    },\r\n    [verticalNavItemList]\r\n  );\r\n\r\n  const horizontalTabsValueHandler = useCallback(\r\n    (event, newValue) => {\r\n      const tabsValue = horizontalNavItemList.map(\r\n        (linkItem) => `/${linkItem.label}`\r\n      );\r\n      const pathIsExistInTabs = tabsValue.includes(newValue);\r\n\r\n      if (!pathIsExistInTabs) {\r\n        setHorizontalNavItemValue(false);\r\n      } else {\r\n        setVerticalNavItemValue(false);\r\n        setHorizontalNavItemValue(newValue);\r\n      }\r\n    },\r\n    [horizontalNavItemList]\r\n  );\r\n\r\n  const tabsValueHandler = useCallback(\r\n    (event, newValue) => {\r\n      verticalTabsValueHandler(event, newValue);\r\n      horizontalTabsValueHandler(event, newValue);\r\n    },\r\n    [verticalTabsValueHandler, horizontalTabsValueHandler]\r\n  );\r\n\r\n  useEffect(() => {\r\n    navItemListHandler(navItemNumber);\r\n  }, [navItemNumber, navItemListHandler]);\r\n\r\n  useEffect(() => {\r\n    navItemNumberHandler();\r\n  }, [navItemNumberHandler]);\r\n\r\n  useEffect(() => {\r\n    tabsValueHandler('', location.pathname);\r\n  }, [location.pathname, tabsValueHandler]);\r\n\r\n  const isActive = useMemo(\r\n    () => (history, path) => {\r\n      if (history.location.pathname === path) {\r\n        return {\r\n          color: prefersDarkMode\r\n            ? theme.palette.secondary.dark\r\n            : theme.palette.secondary.light,\r\n        };\r\n      }\r\n    },\r\n    [\r\n      prefersDarkMode,\r\n      theme.palette.secondary.dark,\r\n      theme.palette.secondary.light,\r\n    ]\r\n  );\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawerIsOpen(!drawerIsOpen);\r\n  };\r\n\r\n  const toggleSearchHandler = useCallback(() => {\r\n    setShowSearchBar((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Toolbar variant={isExtraSmallDevice ? 'regular' : 'dense'}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            wrap=\"nowrap\"\r\n          >\r\n            <Grid item>\r\n              {showSearchBar ? (\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  wrap=\"nowrap\"\r\n                >\r\n                  <Grid item>\r\n                    <Tooltip TransitionComponent={Zoom} title=\"Back\">\r\n                      <IconButton onClick={toggleSearchHandler}>\r\n                        <SvgIcon>\r\n                          <path d={backIcon.path} />\r\n                        </SvgIcon>\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <SearchBar />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  wrap=\"nowrap\"\r\n                >\r\n                  {isExtraSmallDevice ? null : (\r\n                    <Grid item>\r\n                      <Tooltip TransitionComponent={Zoom} title=\"More\">\r\n                        <IconButton\r\n                          edge={false}\r\n                          aria-label=\"menu\"\r\n                          onClick={toggleDrawer}\r\n                        >\r\n                          <SvgIcon>\r\n                            <path d={menuIcon.path} />\r\n                          </SvgIcon>\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <DrawerContainer\r\n                        accountItemList={linkItemList.filter((link) => {\r\n                          const accountItems = state.isAuthenticated\r\n                            ? 'authenticated'\r\n                            : 'unauthenticated';\r\n                          return link.type === accountItems;\r\n                        })}\r\n                        toggleDrawer={toggleDrawer}\r\n                        drawerIsOpen={drawerIsOpen}\r\n                        tabsValueHandler={tabsValueHandler}\r\n                        verticalNavItemList={verticalNavItemList}\r\n                        verticalNavItemValue={verticalNavItemValue}\r\n                        isActive={isActive}\r\n                        history={history}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item>\r\n                    <Logo\r\n                      isActiveStyle={isActive}\r\n                      routeHistory={history}\r\n                      tabsValueHandler={tabsValueHandler}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Tooltip TransitionComponent={Zoom} title=\"Search\">\r\n                      <IconButton onClick={toggleSearchHandler}>\r\n                        <SvgIcon>\r\n                          <path d={searchIcon.path} />\r\n                        </SvgIcon>\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              {horizontalNavItemList ? (\r\n                <HorizontalNavItems\r\n                  horizontalNavItemList={horizontalNavItemList}\r\n                  horizontalNavItemValue={horizontalNavItemValue}\r\n                  horizontalTabsValueHandler={horizontalTabsValueHandler}\r\n                  isActiveStyle={isActive}\r\n                  routeHistory={history}\r\n                />\r\n              ) : null}\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"row\" wrap=\"nowrap\">\r\n                <AccountDropDown\r\n                  accountItemList={linkItemList.filter((link) => {\r\n                    const accountItems = state.isAuthenticated\r\n                      ? 'authenticated'\r\n                      : 'unauthenticated';\r\n                    return link.type === accountItems;\r\n                  })}\r\n                  toggleDrawer={toggleDrawer}\r\n                  drawerIsOpen={drawerIsOpen}\r\n                  tabsValueHandler={tabsValueHandler}\r\n                  verticalNavItemList={verticalNavItemList}\r\n                  verticalNavItemValue={verticalNavItemValue}\r\n                  isActive={isActive}\r\n                  history={history}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.offset} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index } = props;\r\n\r\n  return <Paper width=\"100%\">{value === index && <Paper p={3}>{children}</Paper>}</Paper>;\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;\r\n","import React, { useRef } from 'react';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { useThree, useFrame, extend } from 'react-three-fiber';\n\nextend({ OrbitControls });\n\nconst CameraControls = () => {\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n\n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, domElement]}\n      enableZoom={true}\n      enablePan={false}\n    />\n  );\n};\n\nexport default CameraControls;\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport * as THREE from 'three';\r\nimport { useLoader } from 'react-three-fiber';\r\n\r\nconst NameCard = (props) => {\r\n  const mesh = useRef();\r\n\r\n  const [frontCardTexture, BackCardTexture] = useLoader(THREE.TextureLoader, [\r\n    props.data.frontCard,\r\n    props.data.backCard,\r\n  ]);\r\n\r\n  return (\r\n    // <mesh scale={[22, 16, 0.2]}>\r\n    //   <MeshBasicMaterial color={{'blue'}}/>\r\n    //   <boxBufferGeometry args={[1, 1, 1]} />\r\n    //   <meshStandardMaterial color={'green'} />\r\n    // </mesh>\r\n\r\n    <mesh scale={[22, 16, 0.2]}>\r\n      <boxBufferGeometry attach=\"geometry\" />\r\n      <meshBasicMaterial attachArray=\"material\" color=\"white\" />\r\n      <meshBasicMaterial attachArray=\"material\" color=\"white\" />\r\n      <meshBasicMaterial attachArray=\"material\" color=\"white\" />\r\n      <meshBasicMaterial attachArray=\"material\" color=\"white\" />\r\n      <meshBasicMaterial attachArray=\"material\" map={frontCardTexture} />\r\n      <meshBasicMaterial attachArray=\"material\" map={BackCardTexture} />\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default NameCard;\r\n","import React, { Suspense } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Canvas } from 'react-three-fiber';\r\nimport CameraControls from './CameraControls';\r\nimport NameCard from './NameCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst Card3d = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Canvas\r\n      // style={{ height: 405 }}\r\n      camera={{ position: [0, 0, 15] }}\r\n      onCreated={({ gl }) => gl.setClearColor('black')}\r\n    >\r\n      <ambientLight />\r\n      <pointLight position={[10, 10, 10]} />\r\n      <CameraControls />\r\n      <Suspense fallback=\"\">\r\n        <NameCard data={props.data} />\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default Card3d;\r\n","import React, { useState } from 'react';\r\nimport { AppBar, Tab, Tabs } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TabPanel from './TabPanel';\r\n\r\nimport Card3d from './Card3d';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  twoDNameCard: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst CardDisplayWrapper = (props) => {\r\n  const [tabValue, setTabValue] = useState('one');\r\n  const classes = useStyles();\r\n\r\n  const tabChangeHandler = (event, newTabValue) => {\r\n    setTabValue(newTabValue);\r\n  };\r\n\r\n  let CardDisplay;\r\n  if (props.cardDisplayType === '3d') {\r\n    CardDisplay = <Card3d data={props.data} />;\r\n  } else if (props.display === '2d') {\r\n    CardDisplay = (\r\n      <>\r\n        <AppBar position=\"static\" width=\"100%\">\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={tabChangeHandler}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            <Tab value=\"one\" label=\"2D Name Card Front\"></Tab>\r\n            <Tab value=\"two\" label=\"2D Name Card Back\"></Tab>\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={tabValue} index=\"one\">\r\n          <img\r\n            src={props.data.frontCard}\r\n            alt=\"alternate front card\"\r\n            className={classes.twoDNameCard}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index=\"two\">\r\n          <img\r\n            src={props.data.backCard}\r\n            alt=\"alternate back card\"\r\n            className={classes.twoDNameCard}\r\n          />\r\n        </TabPanel>\r\n      </>\r\n    );\r\n  } else {\r\n    CardDisplay = (\r\n      <>\r\n        <AppBar position=\"static\" width=\"100%\">\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={tabChangeHandler}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            <Tab value=\"one\" label=\"3D Name Card\"></Tab>\r\n            <Tab value=\"two\" label=\"2D Name Card Front\"></Tab>\r\n            <Tab value=\"three\" label=\"2D Name Card Back\"></Tab>\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={tabValue} index=\"one\">\r\n          <Card3d />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index=\"two\">\r\n          <img\r\n            src={props.data.frontCard}\r\n            alt=\"alternate front card\"\r\n            className={classes.twoDNameCard}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index=\"three\">\r\n          <img\r\n            src={props.data.backCard}\r\n            alt=\"alternate back card\"\r\n            className={classes.twoDNameCard}\r\n          />\r\n        </TabPanel>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return CardDisplay;\r\n};\r\n\r\nexport default CardDisplayWrapper;\r\n","import React from 'react';\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Link,\r\n  Avatar,\r\n  SvgIcon,\r\n  ListItemAvatar,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nconst CardMoreOption = (props) => {\r\n  const isExtraSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('sm')\r\n  );\r\n\r\n  return (\r\n    <li key={props.linkItem.title}>\r\n      <Link\r\n        color=\"inherit\"\r\n        underline=\"none\"\r\n        target=\"_blank\"\r\n        rel=\"noopener\"\r\n        component=\"a\"\r\n        onClick={props.moreOptionsHandler}\r\n      >\r\n        <ListItem button divider dense={!isExtraSmallDevice}>\r\n          <ListItemAvatar>\r\n            {/* <Avatar>{actionLink(props.linkItem.label)}</Avatar> */}\r\n            <SvgIcon>\r\n              <path d={props.linkItem.svgPath} />\r\n            </SvgIcon>\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={props.linkItem.title}\r\n            secondary={props.linkItem.description}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CardMoreOption;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\n\r\nimport CardMoreOption from './CardMoreOption';\r\n\r\nconst CardMoreOptions = (props) => {\r\n  return (\r\n    <List>\r\n      {props.moreOptions.map((linkItem, index) => (\r\n        <CardMoreOption\r\n          key={Math.random()}\r\n          linkItem={linkItem}\r\n          moreOptionsHandler={props.moreOptionsHandler}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CardMoreOptions;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Chip, Tabs } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chip: { margin: theme.spacing(1) },\r\n}));\r\n\r\nconst CardChips = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const CardChip = (props) => {\r\n    const {\r\n      fullWidth,\r\n      indicator,\r\n      selectionFollowsFocus,\r\n      textColor,\r\n      item,\r\n      ...chipProps\r\n    } = props;\r\n    return (\r\n      <Chip\r\n        label={`#${item}`}\r\n        className={classes.chip}\r\n        {...chipProps}\r\n        clickable={true}\r\n        component={RouterLink}\r\n        to={'/latest'}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tabs value={false} variant=\"scrollable\" scrollButtons=\"auto\">\r\n      {props.data.tags.map((item, index) => (\r\n        <CardChip item={item} key={Math.random()} />\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default CardChips;\r\n","import React from 'react';\r\nimport { ListItem, ListItemText, ListItemIcon, Link } from '@material-ui/core';\r\n\r\nimport {\r\n  Facebook as FacebookIcon,\r\n  YouTube as YouTubeIcon,\r\n  LinkedIn as LinkedInIcon,\r\n  WhatsApp as WhatsAppIcon,\r\n  Instagram as InstagramIcon,\r\n  Link as LinkIcon,\r\n} from '@material-ui/icons';\r\n\r\nconst CardLink = (props) => {\r\n  const actionLinkIcon = (link) => {\r\n    let icon = <LinkIcon />;\r\n    if (link.startsWith('https://www.facebook.com')) {\r\n      icon = <FacebookIcon />;\r\n    } else if (link.startsWith('https://www.youtube.com')) {\r\n      icon = <YouTubeIcon />;\r\n    } else if (link.startsWith('https://www.linkedin.com')) {\r\n      icon = <LinkedInIcon />;\r\n    } else if (link.startsWith('https://www.whatsapp.com')) {\r\n      icon = <WhatsAppIcon />;\r\n    } else if (link.startsWith('https://www.instagram.com')) {\r\n      icon = <InstagramIcon />;\r\n    }\r\n    return icon;\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      href={props.linkItem.link}\r\n      color=\"inherit\"\r\n      underline=\"none\"\r\n      target=\"_blank\"\r\n      rel=\"noopener\"\r\n      component=\"a\"\r\n    >\r\n      <ListItem button divider>\r\n        <ListItemText primary={props.linkItem.title} />\r\n        <ListItemIcon>{actionLinkIcon(props.linkItem.link)}</ListItemIcon>\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CardLink;\r\n","import React from 'react';\r\nimport { List } from '@material-ui/core';\r\n\r\nimport CardLink from './CardLink';\r\n\r\nconst CardLinks = (props) => {\r\n  return (\r\n    <List>\r\n      {props.data.links.map((linkItem, index) => (\r\n        <CardLink linkItem={linkItem} key={Math.random()} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CardLinks;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ExpandMore as ExpandMoreIcon } from '@material-ui/icons';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  detailItemContainer: {\r\n    backgroundColor: theme.palette.mode === 'dark' ? grey[700] : grey[300],\r\n  },\r\n}));\r\n\r\nconst CardDescriptionList = (props) => {\r\n  const [expanded, setExpanded] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const detailItemHander = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : '');\r\n  };\r\n\r\n  return props.details.map((detailItem, index) => (\r\n    <Accordion\r\n      square\r\n      expanded={expanded === detailItem.title}\r\n      onChange={detailItemHander(detailItem.title)}\r\n      className={classes.detailItemContainer}\r\n      key={Math.random()}\r\n      elevation={2}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls={`panel-${detailItem.title}-content`}\r\n        id={`panel-${detailItem.title}-header`}\r\n      >\r\n        <Typography>{detailItem.title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography>{detailItem.description}</Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  ));\r\n};\r\n\r\nexport default CardDescriptionList;\r\n","import React from 'react';\r\nimport QRCode from 'react-qr-code';\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  DialogContent,\r\n  Link,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  Language as LanguageIcon,\r\n  Bookmark as BookmarkIcon,\r\n  Share as ShareIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Phone as PhoneIcon,\r\n  Email as EmailIcon,\r\n  Message as MessageIcon,\r\n  QrCode2 as QrCode2Icon,\r\n  Cancel as CancelIcon,\r\n  AddCircle as AddCircleIcon,\r\n} from '@material-ui/icons';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  dialogCloseButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n  dialogAddButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst CustomDialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, onAdd, ...rest } = props;\r\n  return (\r\n    <DialogTitle disableTypography {...rest}>\r\n      <Typography variant=\"h6\" component=\"div\">\r\n        {children}\r\n      </Typography>\r\n      {onAdd ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onAdd}\r\n          className={classes.dialogAddButton}\r\n        >\r\n          <AddCircleIcon />\r\n        </IconButton>\r\n      ) : null}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          className={classes.dialogCloseButton}\r\n        >\r\n          <CancelIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n});\r\n\r\nconst CardActionLinks = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        href={props.data.website}\r\n        underline=\"none\"\r\n        target=\"_blank\"\r\n        rel=\"noopener\"\r\n        component=\"a\"\r\n      >\r\n        <IconButton aria-label=\"website\">\r\n          <LanguageIcon />\r\n        </IconButton>\r\n      </Link>\r\n      <IconButton aria-label=\"bookmark\" onClick={props.bookmarkHandler}>\r\n        <BookmarkIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={props.bookmarkIsOpen}\r\n        aria-labelledby=\"bookmark-dialog-title\"\r\n        onClose={props.bookmarkHandler}\r\n      >\r\n        <CustomDialogTitle\r\n          id=\"bookmark-dialog-title\"\r\n          onClose={props.bookmarkHandler}\r\n          onAdd={props.bookmarkAddHandler}\r\n        >\r\n          Bookmark\r\n        </CustomDialogTitle>\r\n        <DialogContent dividers>\r\n          <QRCode value={props.data.initLink} />\r\n        </DialogContent>\r\n      </Dialog>\r\n      <Link\r\n        href={`tel:+${props.data.contactPerson.contactNumber}`}\r\n        underline=\"none\"\r\n        target=\"_self\"\r\n        rel=\"noopener\"\r\n        component=\"a\"\r\n      >\r\n        <IconButton aria-label=\"phone\">\r\n          <PhoneIcon />\r\n        </IconButton>\r\n      </Link>\r\n      <Link\r\n        href={`mailto:${props.data.contactPerson.contactEmail}`}\r\n        underline=\"none\"\r\n        target=\"_self\"\r\n        rel=\"noopener\"\r\n        component=\"a\"\r\n      >\r\n        <IconButton aria-label=\"email\">\r\n          <EmailIcon />\r\n        </IconButton>\r\n      </Link>\r\n      <Link\r\n        href={`sms:/${props.data.contactPerson.contactNumber}/?body=/${props.data.contactPerson.smsBody}/`}\r\n        underline=\"none\"\r\n        target=\"_self\"\r\n        rel=\"noopener\"\r\n        component=\"a\"\r\n      >\r\n        <IconButton aria-label=\"message\">\r\n          <MessageIcon />\r\n        </IconButton>\r\n      </Link>\r\n      <IconButton aria-label=\"share\" onClick={props.shareHandler}>\r\n        <ShareIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={props.shareIsOpen}\r\n        aria-labelledby=\"share-dialog-title\"\r\n        onClose={props.shareHandler}\r\n      >\r\n        <CustomDialogTitle id=\"share-dialog-title\" onClose={props.shareHandler}>\r\n          Share\r\n        </CustomDialogTitle>\r\n        <DialogContent dividers>\r\n          <QRCode value={props.data.initLink} />\r\n        </DialogContent>\r\n      </Dialog>\r\n      <IconButton aria-label=\"qr-code\" onClick={props.qrCodeHandler}>\r\n        <QrCode2Icon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={props.qrCodeIsOpen}\r\n        aria-labelledby=\"qr-code-dialog-title\"\r\n        onClose={props.qrCodeHandler}\r\n      >\r\n        <CustomDialogTitle\r\n          id=\"qr-code-dialog-title\"\r\n          onClose={props.qrCodeHandler}\r\n        >\r\n          QR Code\r\n        </CustomDialogTitle>\r\n        <DialogContent dividers>\r\n          <QRCode value={props.data.initLink} />\r\n        </DialogContent>\r\n      </Dialog>\r\n      <IconButton\r\n        className={clsx(classes.expand, {\r\n          [classes.expandOpen]: props.expanded,\r\n        })}\r\n        onClick={props.handleExpandClick}\r\n        aria-expanded={props.expanded}\r\n        aria-label=\"show more\"\r\n      >\r\n        <ExpandMoreIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardActionLinks;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Popper,\r\n  ClickAwayListener,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Collapse,\r\n  IconButton,\r\n  Divider,\r\n  Avatar,\r\n  Paper,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport {\r\n  makeStyles,\r\n  withStyles,\r\n  styled,\r\n  useTheme,\r\n} from '@material-ui/core/styles';\r\nimport { MoreHoriz as MoreHorizIcon } from '@material-ui/icons';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport CardDisplayWrapper from './CardDisplayWrapper';\r\nimport CardMoreOptions from './CardMoreOptions';\r\nimport CardChips from './CardChips';\r\nimport CardLinks from './CardLinks';\r\nimport CardDescriptionList from './CardDescriptionList';\r\nimport CardActionLinks from './CardActionLinks';\r\nimport useWindowSize from '../../hooks/useWindowSize';\r\nimport {\r\n  visibilityOffIcon,\r\n  reportIcon,\r\n  closeIcon,\r\n} from '../../assets/svg/SvgIcons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardChipContainer: {\r\n    padding: '0',\r\n  },\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n  moreOptionsContainer: {},\r\n});\r\n\r\nconst CustomPopper = styled(Popper)({\r\n  position: 'absolute',\r\n});\r\n\r\nconst MoreOptionsContainer = withStyles(styles)(\r\n  React.forwardRef((props, ref) => {\r\n    const { classes, children, ...rest } = props;\r\n    return (\r\n      <Paper className={classes.moreOptionsContainer} {...rest}>\r\n        {children}\r\n      </Paper>\r\n    );\r\n  })\r\n);\r\n\r\nconst MoreOptionsOnClick = (props) => {\r\n  const {\r\n    moreOptionsToggleHandler,\r\n    popperId,\r\n    moreOptions,\r\n    moreOptionsIsOpen,\r\n    anchorEl,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-describedby={popperId}\r\n        onClick={moreOptionsToggleHandler}\r\n        ref={anchorEl}\r\n        disabled={moreOptionsIsOpen}\r\n      >\r\n        <MoreHorizIcon />\r\n      </IconButton>\r\n      <ClickAwayListener\r\n        mouseEvent=\"onMouseDown\"\r\n        touchEvent=\"onTouchStart\"\r\n        onClickAway={moreOptionsToggleHandler}\r\n      >\r\n        <CustomPopper\r\n          id={popperId}\r\n          open={moreOptionsIsOpen}\r\n          anchorEl={anchorEl}\r\n          popperRef={anchorEl}\r\n          placement=\"bottom-end\"\r\n          modifiers={[\r\n            { name: 'flip', enabled: false },\r\n            {\r\n              name: 'preventOverflow',\r\n              enabled: false,\r\n            },\r\n          ]}\r\n        >\r\n          <MoreOptionsContainer>\r\n            <CardMoreOptions\r\n              moreOptions={moreOptions}\r\n              moreOptionsHandler={moreOptionsToggleHandler}\r\n            />\r\n          </MoreOptionsContainer>\r\n        </CustomPopper>\r\n      </ClickAwayListener>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CardMain = (props) => {\r\n  const { width, height } = useWindowSize();\r\n  const theme = useTheme();\r\n  const isExtraSmallDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.down('sm')\r\n  );\r\n  const [moreOptions, setMoreOptions] = useState([\r\n    {\r\n      label: 'hide',\r\n      title: 'Hide',\r\n      description: 'Show Hide Options',\r\n      svgPath: visibilityOffIcon.path,\r\n    },\r\n    {\r\n      label: 'block',\r\n      title: 'Block',\r\n      description: 'Block the selected person',\r\n      svgPath: closeIcon.path,\r\n    },\r\n    {\r\n      label: 'report',\r\n      title: 'Report',\r\n      description: 'Show Report Options',\r\n      svgPath: reportIcon.path,\r\n    },\r\n  ]);\r\n\r\n  const [cardDisplayType, setCardDisplayType] = useState('3d');\r\n  const [expanded, setExpanded] = useState(props.cardIsExpanded);\r\n  const [moreOptionsIsOpen, setMoreOptionsIsOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [bookmarkIsOpen, setBookmarkIsOpen] = useState(false);\r\n  const [shareIsOpen, setShareIsOpen] = useState(false);\r\n  const [qrCodeIsOpen, setQRCodeIsOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const moreOptionsToggleHandler = (event) => {\r\n    setMoreOptionsIsOpen((prev) => !prev);\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  };\r\n\r\n  const bookmarkHandler = () => {\r\n    setBookmarkIsOpen((prev) => !prev);\r\n  };\r\n\r\n  const shareHandler = () => {\r\n    setShareIsOpen((prev) => !prev);\r\n  };\r\n\r\n  const qrCodeHandler = () => {\r\n    setQRCodeIsOpen((prev) => !prev);\r\n  };\r\n\r\n  const bookmarkAddHandler = () => {};\r\n\r\n  const popperId = moreOptionsIsOpen ? 'more-options-popper' : undefined;\r\n\r\n  return (\r\n    <Card\r\n      className={classes.cardSize}\r\n      style={{\r\n        minWidth: theme.breakpoints.values.xxs,\r\n        width: isExtraSmallDevice ? width : theme.breakpoints.values.sm,\r\n      }}\r\n    >\r\n      <CardHeader\r\n        title={props.cardData.name}\r\n        subheader={props.cardData.companyName}\r\n        avatar={\r\n          <RouterLink to={'/account'}>\r\n            <Avatar src={props.cardData.users.image} />\r\n          </RouterLink>\r\n        }\r\n        action={\r\n          <MoreOptionsOnClick\r\n            moreOptions={moreOptions}\r\n            popperId={popperId}\r\n            moreOptionsToggleHandler={moreOptionsToggleHandler}\r\n            moreOptionsIsOpen={moreOptionsIsOpen}\r\n            anchorEl={anchorEl}\r\n          />\r\n        }\r\n      ></CardHeader>\r\n      <CardMedia\r\n        style={{\r\n          minWidth: theme.breakpoints.values.xxs,\r\n          width: isExtraSmallDevice ? width : theme.breakpoints.values.sm,\r\n          height: isExtraSmallDevice ? 243 : 310.5,\r\n        }}\r\n      >\r\n        <CardDisplayWrapper\r\n          data={props.cardData}\r\n          cardDisplayType={cardDisplayType}\r\n        />\r\n      </CardMedia>\r\n      <CardContent className={classes.cardChipContainer}>\r\n        <CardChips\r\n          data={props.cardData}\r\n          className={classes.CardChipsContainer}\r\n        />\r\n      </CardContent>\r\n      <Divider variant=\"middle\" />\r\n      <CardContent>\r\n        <CardDescriptionList details={props.cardData.details} />\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <CardActionLinks\r\n          data={props.cardData}\r\n          bookmarkIsOpen={bookmarkIsOpen}\r\n          shareIsOpen={shareIsOpen}\r\n          qrCodeIsOpen={qrCodeIsOpen}\r\n          bookmarkHandler={bookmarkHandler}\r\n          shareHandler={shareHandler}\r\n          qrCodeHandler={qrCodeHandler}\r\n          expanded={expanded}\r\n          handleExpandClick={handleExpandClick}\r\n        />\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <CardLinks data={props.cardData} />\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardMain;\r\n","import frontCard from '../../assets/chinese-business-card-translation-samples-intel-445-eng.jpg';\r\nimport backCard from '../../assets/chinese-business-card-translation-samples-intel-445-sch.jpg';\r\n\r\nexport const SingleItem = {\r\n  _id: 'abcd2234',\r\n  initLink: 'mark-zuckerberg',\r\n  cardType: 'public',\r\n  frontCard: frontCard,\r\n  backCard: backCard,\r\n  name: 'Mark Zuckerberg',\r\n  companyName: 'Facebook, Inc.',\r\n  position: 'Software Engineer',\r\n  website: 'https://material-ui.com/',\r\n  links: [\r\n    { title: 'Like me from Facebook', link: 'https://www.facebook.com/' },\r\n    {\r\n      title: 'Subscribe me from Youtube',\r\n      link: 'https://www.youtube.com/',\r\n    },\r\n    {\r\n      title: 'See my website for more info',\r\n      link: 'https://material-ui.com/',\r\n    },\r\n  ],\r\n  tags: [\r\n    'Semiconductor',\r\n    'Intel',\r\n    'Bob Swan',\r\n    'Intel Inside',\r\n    'Sponsors of Tomorrow',\r\n    'Look Inside',\r\n    \"Experience What's Inside\",\r\n    'Semiconductor',\r\n    'Intel',\r\n    'Bob Swan',\r\n    'Intel Inside',\r\n    'Sponsors of Tomorrow',\r\n    'Look Inside',\r\n    \"Experience What's Inside\",\r\n  ],\r\n  categories: 'Hardware Manufacture',\r\n  details: [\r\n    {\r\n      title: 'Background',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n    },\r\n    {\r\n      title: 'Summary',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n    },\r\n  ],\r\n  address: ['KLCC'],\r\n  contactPerson: {\r\n    contactName: 'Mark Zukerberg',\r\n    contactNumber: '+60 198765432',\r\n    contactEmail: 'chrismartin@gmail.com',\r\n    smsBody: 'Hello, Mark!',\r\n  },\r\n  createdBy: 'Mark Zuckerberg',\r\n  updatedBy: 'Mark Zukerberg',\r\n  updated: new Date().toISOString(),\r\n  created: new Date().toISOString(),\r\n  expired: new Date().toISOString(),\r\n  users: {\r\n    name: 'Mark Zuckerberg',\r\n    image:\r\n      'https://static01.nyt.com/images/2020/11/17/business/17techhearing-facebookpreview/merlin_163192374_92604511-ae28-43ba-8d7f-d3fbdae53e01-mobileMasterAt3x.jpg',\r\n  },\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CardMain from '../Card/CardMain';\r\nimport { SingleItem } from '../Demo/SingleItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardContainer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Home = (props) => {\r\n  const [cardData, setCardData] = useState(SingleItem);\r\n  const [cardIsExpanded, setCardIsExpanded] = useState(true);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"center\"\r\n      className={classes.cardContainer}\r\n    >\r\n      <Grid item>\r\n        <CardMain cardData={cardData} cardIsExpanded={cardIsExpanded} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport CardMain from './CardMain';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardContainer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: theme.breakpoints.values.xs,\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  card: { marginBottom: theme.spacing(4) },\r\n}));\r\n\r\nconst CardList = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"flex-start\"\r\n      alignItems=\"center\"\r\n      className={classes.cardContainer}\r\n    >\r\n      {props.cardDataList.map((cardData) => (\r\n        <div key={Math.random()}>\r\n          <Grid item className={classes.card}>\r\n            <CardMain cardData={cardData} />\r\n          </Grid>\r\n        </div>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from 'react';\r\n\r\nimport CardList from '../Card/CardList';\r\nimport { FullList } from '../Demo/FullList';\r\n\r\nconst LatestCard = () => {\r\n  const [cardDataList, setCardDataList] = useState(FullList);\r\n  const [cardIsExpanded, setCardIsExpanded] = useState(false);\r\n\r\n  return (\r\n    <CardList cardDataList={cardDataList} cardIsExpanded={cardIsExpanded} />\r\n  );\r\n};\r\n\r\nexport default LatestCard;\r\n","import React from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  SvgIcon,\r\n  InputAdornment,\r\n  IconButton,\r\n  Autocomplete,\r\n  Chip,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ToggleIcon from 'material-ui-toggle-icon';\r\nimport { checkIcon, alertIcon } from '../../assets/svg/SvgIcons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepperInputContainer: { margin: `0 ${theme.spacing(1)}` },\r\n}));\r\n\r\nconst InputTextRenderer = (props) => {\r\n  const classes = useStyles();\r\n  return props.formList.map((formItem) => {\r\n    const {\r\n      id,\r\n      fieldName,\r\n      config,\r\n      formObject,\r\n      formChangeHandler,\r\n      objectList,\r\n      index,\r\n    } = { ...formItem };\r\n    return (\r\n      <Grid item key={id} className={classes.stepperInputContainer}>\r\n        {config.componentType ? (\r\n          <Autocomplete\r\n            key={id}\r\n            id={id}\r\n            options={config.options.map((option) => option)}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"contained\"\r\n                  label={option}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                margin=\"normal\"\r\n                type={config.type}\r\n                required={config.validations.isRequired}\r\n                error={config.isTouched && !config.validity.isValid}\r\n                value={config.value}\r\n                multiline={config.multiline}\r\n                maxRows={4}\r\n                minRows={4}\r\n                disabled={config.disabled}\r\n                readOnly={config.disabled}\r\n                style={{ width: 300 }}\r\n                label={config.label}\r\n              />\r\n            )}\r\n            multiple={config.multiple}\r\n            freeSolo\r\n            clearIcon={\r\n              <SvgIcon>\r\n                <path d={config.icon.close.path} />\r\n              </SvgIcon>\r\n            }\r\n          />\r\n        ) : (\r\n          <TextField\r\n            key={id}\r\n            name={id}\r\n            id={id}\r\n            label={config.label}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            margin=\"normal\"\r\n            type={config.type}\r\n            required={config.validations.isRequired}\r\n            error={config.isTouched && !config.validity.isValid}\r\n            value={config.value}\r\n            multiline={config.multiline}\r\n            maxRows={4}\r\n            minRows={4}\r\n            disabled={config.disabled}\r\n            readOnly={config.disabled}\r\n            style={{ width: 300 }}\r\n            inputProps={{ 'data-index': index }}\r\n            onChange={formChangeHandler({\r\n              fieldName,\r\n              formObject,\r\n              objectList,\r\n              index,\r\n              changeType: 'change',\r\n            })}\r\n            onBlur={formChangeHandler({\r\n              fieldName,\r\n              formObject,\r\n              objectList,\r\n              index,\r\n              changeType: 'change',\r\n            })}\r\n            helperText={\r\n              config.isTouched && config.validity.isValid ? (\r\n                <span>\r\n                  <SvgIcon\r\n                    style={{\r\n                      width: 12,\r\n                      height: 12,\r\n                      marginRight: 8,\r\n                    }}\r\n                  >\r\n                    <path d={checkIcon.path} />\r\n                  </SvgIcon>\r\n                  {config.validity.label}\r\n                </span>\r\n              ) : config.isTouched && !config.validity.isValid ? (\r\n                <span>\r\n                  <SvgIcon\r\n                    style={{\r\n                      width: 12,\r\n                      height: 12,\r\n                      marginRight: 8,\r\n                    }}\r\n                  >\r\n                    <path d={alertIcon.path} />\r\n                  </SvgIcon>\r\n                  {config.validity.label}\r\n                </span>\r\n              ) : (\r\n                '*Required'\r\n              )\r\n            }\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  {config.icon.type === 'toggle' ? (\r\n                    <IconButton\r\n                      disabled={Boolean(!config.value) || config.disabled}\r\n                      onClick={formChangeHandler({\r\n                        fieldName,\r\n                        formObject,\r\n                        objectList,\r\n                        index,\r\n                        toggleType: 'passwordText',\r\n                      })}\r\n                    >\r\n                      <ToggleIcon\r\n                        on={config.icon.isOn}\r\n                        onIcon={\r\n                          <SvgIcon>\r\n                            <path d={config.icon.on.path} />\r\n                          </SvgIcon>\r\n                        }\r\n                        offIcon={\r\n                          <SvgIcon>\r\n                            <path d={config.icon.off.path} />\r\n                          </SvgIcon>\r\n                        }\r\n                      />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <IconButton\r\n                      disabled={Boolean(!config.value) || config.disabled}\r\n                      onClick={formChangeHandler({\r\n                        fieldName,\r\n                        formObject,\r\n                        objectList,\r\n                        index,\r\n                        changeType: 'reset',\r\n                      })}\r\n                    >\r\n                      <SvgIcon>\r\n                        <path d={config.icon.close.path} />\r\n                      </SvgIcon>\r\n                    </IconButton>\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      </Grid>\r\n    );\r\n  });\r\n};\r\n\r\nexport default InputTextRenderer;\r\n","import React from 'react';\r\nimport InputTextRenderer from './InputTextRenderer';\r\n\r\nconst RestructureFormObject = (props) => {\r\n  const { formObject, formChangeHandler, objectList = '', index = 0 } = {\r\n    ...props,\r\n  };\r\n\r\n  const formList = [];\r\n\r\n  for (let key in formObject) {\r\n    formList.push({\r\n      id: `${formObject[key].name}-${index}`,\r\n      fieldName: key,\r\n      config: formObject[key],\r\n      formObject,\r\n      formChangeHandler,\r\n      objectList,\r\n      index,\r\n    });\r\n  }\r\n\r\n  return <InputTextRenderer formList={formList} />;\r\n};\r\n\r\nexport default RestructureFormObject;\r\n","export const fieldValidation = (value, validations) => {\r\n  let validity = { isValid: true, label: 'checked' };\r\n\r\n  if (!validations) {\r\n    return validity;\r\n  }\r\n\r\n  if (validations.isEmail) {\r\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n    validity = value.match(emailRegex)\r\n      ? validity\r\n      : {\r\n          isValid: false,\r\n          label: `Not a valid email`,\r\n        };\r\n  }\r\n\r\n  if (validations.minLength) {\r\n    validity =\r\n      value.length >= validations.minLength\r\n        ? validity\r\n        : {\r\n            isValid: false,\r\n            label: `Minimum ${validations.minLength} characters`,\r\n          };\r\n  }\r\n\r\n  if (validations.maxLength) {\r\n    validity =\r\n      value.length <= validations.maxLength\r\n        ? validity\r\n        : {\r\n            isValid: false,\r\n            label: `Maximum ${validations.maxLength} characters`,\r\n          };\r\n  }\r\n\r\n  if (validations.isRequired) {\r\n    validity =\r\n      value.trim() !== ''\r\n        ? validity\r\n        : { isValid: false, label: 'This field is required' };\r\n  }\r\n\r\n  return validity;\r\n};\r\n","import { fieldValidation } from './fieldValidation';\r\n\r\nexport const fieldChangeHandler = (args, event) => {\r\n  const { fieldName, formObject, changeType = 'none', toggleType = 'none' } = {\r\n    ...args,\r\n  };\r\n\r\n  let updatedForm = {\r\n    ...formObject,\r\n    [fieldName]: {\r\n      ...formObject[fieldName],\r\n      value:\r\n        changeType === 'change'\r\n          ? event.target.value\r\n          : changeType === 'reset'\r\n          ? ''\r\n          : formObject[fieldName].value,\r\n      type:\r\n        toggleType === 'passwordText' &&\r\n        formObject[fieldName].type === 'password'\r\n          ? 'text'\r\n          : toggleType === 'passwordText' &&\r\n            formObject[fieldName].type === 'text'\r\n          ? 'password'\r\n          : formObject[fieldName].type,\r\n      validity: {\r\n        ...formObject[fieldName].validity,\r\n        ...fieldValidation(\r\n          changeType === 'change'\r\n            ? event.target.value\r\n            : changeType === 'reset'\r\n            ? ''\r\n            : formObject[fieldName].value,\r\n          formObject[fieldName].validations\r\n        ),\r\n      },\r\n      icon: {\r\n        ...formObject[fieldName].icon,\r\n        isOn:\r\n          toggleType === 'passwordText'\r\n            ? !formObject[fieldName].icon.isOn\r\n            : formObject[fieldName].icon.isOn,\r\n      },\r\n      isTouched: true,\r\n    },\r\n  };\r\n\r\n  return updatedForm;\r\n};\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { Grid, Avatar, SvgIcon, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  closeIcon,\r\n  visibilityOffIcon,\r\n  visibilityOnIcon,\r\n} from '../../assets/svg/SvgIcons';\r\nimport { useStore } from '../../hooks/store';\r\nimport RestructureFormObject from '../helper/RestructureFormObject';\r\nimport { fieldChangeHandler } from '../helper/fieldChangeHandler';\r\nimport { uploadIcon, pencilIcon, saveIcon } from '../../assets/svg/SvgIcons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputContainer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      borderRadius: theme.spacing(1),\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    width: theme.breakpoints.values.sm,\r\n    padding: theme.spacing(3),\r\n  },\r\n  avatarIcon: {\r\n    width: theme.spacing(24),\r\n    height: theme.spacing(24),\r\n    border: '1px red solid',\r\n  },\r\n  contentItem: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Details = (props) => {\r\n  const [state, dispatch] = useStore(true);\r\n  const [user, setUser] = useState({\r\n    email: {\r\n      value: state.user.email,\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: true,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: true, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeIcon,\r\n      },\r\n    },\r\n    password: {\r\n      value: state.user.password,\r\n      name: 'password',\r\n      label: 'Password',\r\n      type: 'password',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: true,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: true, label: '*Required' },\r\n      icon: {\r\n        type: 'toggle',\r\n        on: visibilityOnIcon,\r\n        off: visibilityOffIcon,\r\n        isOn: false,\r\n      },\r\n    },\r\n    name: {\r\n      value: state.user.name,\r\n      name: 'name',\r\n      label: 'Name',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: true,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: true, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeIcon,\r\n      },\r\n    },\r\n    // image: {\r\n    //   value: '',\r\n    //   name: 'image',\r\n    //   label: 'Image',\r\n    //   type: 'text',\r\n    //   placeHolder: '',\r\n    //   multiline: false,\r\n    //   validations: {\r\n    //     isRequired: true,\r\n    //   },\r\n    //   isTouched: false,\r\n    //   validity: { isValid: false, label: '*Required' },\r\n    // },\r\n  });\r\n  const [profilePicture, setProfilePicture] = useState();\r\n  const [profileIsLoading, setProfileIsLoading] = useState(false);\r\n  const [previewProfile, setPreviewProfile] = useState();\r\n  const [profileIsValid, setProfileIsValid] = useState(true);\r\n  const [profileButtonIsEnabled, setProfileButtonIsEnabled] = useState(false);\r\n  const [profileState, setProfileState] = useState('read');\r\n  const [profileFormIsValid, setProfileFormIsValid] = useState(true);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!profilePicture) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewProfile(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(profilePicture);\r\n\r\n    // setProfileIsLoading(false);\r\n  }, [profilePicture]);\r\n\r\n  const profileRef = useRef();\r\n\r\n  const profileFormCompleteChangeHandler = useCallback((args) => {\r\n    const { formObject } = { ...args };\r\n\r\n    const updatedForm = { ...formObject };\r\n\r\n    const formValidityList = [];\r\n\r\n    for (let key in updatedForm) {\r\n      formValidityList.push(updatedForm[key].validity.isValid);\r\n    }\r\n\r\n    let formIsValid = true;\r\n    formValidityList.map((isValid) => (formIsValid = formIsValid && isValid));\r\n\r\n    setProfileFormIsValid(formIsValid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    profileFormCompleteChangeHandler({ formObject: user });\r\n  }, [user, profileFormCompleteChangeHandler]);\r\n\r\n  const userDetailsChangeHandler = (args) => (event) => {\r\n    const updatedForm = fieldChangeHandler(args, event);\r\n\r\n    setUser(updatedForm);\r\n  };\r\n\r\n  const profileChangeHandler = (event) => {\r\n    let pickedProfile;\r\n\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedProfile = event.target.files[0];\r\n      setProfilePicture(pickedProfile);\r\n      setProfileIsValid(true);\r\n    } else {\r\n      setProfileIsValid(false);\r\n    }\r\n  };\r\n\r\n  const pickProfileHandler = () => {\r\n    // setProfileIsLoading(true);\r\n    profileRef.current.click();\r\n  };\r\n\r\n  const editProfileHandler = () => {\r\n    profileState === 'read'\r\n      ? setProfileState('update')\r\n      : setProfileState('read');\r\n\r\n    setProfileButtonIsEnabled(!profileButtonIsEnabled);\r\n\r\n    const copiedUser = JSON.parse(JSON.stringify(user));\r\n\r\n    for (const key in copiedUser) {\r\n      copiedUser[key].disabled = !copiedUser[key].disabled;\r\n    }\r\n\r\n    setUser(copiedUser);\r\n  };\r\n\r\n  if (!state.isAuthenticated) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Paper className={classes.inputContainer}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <input\r\n              id=\"profile-picture\"\r\n              ref={profileRef}\r\n              style={{ display: 'none' }}\r\n              type=\"file\"\r\n              accept=\".jpg,.png,.jpeg\"\r\n              onChange={profileChangeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item className={classes.contentItem}>\r\n            <Avatar className={classes.avatarIcon} src={state.user.image} />\r\n          </Grid>\r\n          <Grid item className={classes.contentItem}>\r\n            <LoadingButton\r\n              startIcon={\r\n                <SvgIcon>\r\n                  <path d={uploadIcon.path} />\r\n                </SvgIcon>\r\n              }\r\n              disabled={!profileButtonIsEnabled}\r\n              color=\"secondary\"\r\n              onClick={pickProfileHandler}\r\n              pendingPosition=\"start\"\r\n              variant=\"outlined\"\r\n              pending={profileIsLoading}\r\n            >\r\n              Upload Profile\r\n            </LoadingButton>\r\n          </Grid>\r\n          <RestructureFormObject\r\n            formObject={user}\r\n            formChangeHandler={userDetailsChangeHandler}\r\n          />\r\n          <Grid item className={classes.contentItem}>\r\n            {profileState === 'read' ? (\r\n              <LoadingButton\r\n                startIcon={\r\n                  <SvgIcon>\r\n                    <path d={pencilIcon.path} />\r\n                  </SvgIcon>\r\n                }\r\n                color=\"secondary\"\r\n                onClick={editProfileHandler}\r\n                pendingPosition=\"start\"\r\n                variant=\"contained\"\r\n                // pending={profileIsLoading}\r\n              >\r\n                Edit\r\n              </LoadingButton>\r\n            ) : (\r\n              <LoadingButton\r\n                startIcon={\r\n                  <SvgIcon>\r\n                    <path d={saveIcon.path} />\r\n                  </SvgIcon>\r\n                }\r\n                disabled={!profileFormIsValid}\r\n                color=\"secondary\"\r\n                onClick={editProfileHandler}\r\n                pendingPosition=\"start\"\r\n                variant=\"contained\"\r\n                // pending={profileIsLoading}\r\n              >\r\n                Save\r\n              </LoadingButton>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport { Grid, SvgIcon, IconButton, useMediaQuery } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\n\r\nimport { trashIcon } from '../../assets/svg/SvgIcons';\r\nimport RestructureFormObject from './RestructureFormObject';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    marginTop: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nconst FormObjectList = (props) => {\r\n  const classes = useStyles();\r\n  const isLargeDevice = useMediaQuery((theme) => theme.breakpoints.up('lg'));\r\n\r\n  const { objectList, formChangeHandler, removeFormObjectHandler, flowType } = {\r\n    ...props,\r\n  };\r\n\r\n  return objectList.map((formObject, index) => (\r\n    <Grid\r\n      key={index}\r\n      container\r\n      direction={isLargeDevice && flowType === 'flex' ? 'row' : 'column'}\r\n      justifyContent=\"center\"\r\n      alignItems={isLargeDevice && flowType === 'flex' ? null : 'center'}\r\n    >\r\n      <RestructureFormObject\r\n        formObject={formObject}\r\n        formChangeHandler={formChangeHandler}\r\n        objectList={objectList}\r\n        index={index}\r\n      />\r\n      <Grid item>\r\n        {isLargeDevice && flowType === 'flex' ? (\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            aria-label=\"delete\"\r\n            color=\"secondary\"\r\n            onClick={removeFormObjectHandler({\r\n              objectList,\r\n              index,\r\n            })}\r\n          >\r\n            <SvgIcon>\r\n              <path d={trashIcon.path} />\r\n            </SvgIcon>\r\n          </IconButton>\r\n        ) : (\r\n          <LoadingButton\r\n            aria-label=\"delete\"\r\n            color=\"secondary\"\r\n            onClick={removeFormObjectHandler({\r\n              objectList,\r\n              index,\r\n            })}\r\n            startIcon={\r\n              <SvgIcon>\r\n                <path d={trashIcon.path} />\r\n              </SvgIcon>\r\n            }\r\n            pendingPosition=\"start\"\r\n            variant=\"outlined\"\r\n          >\r\n            DELETE\r\n          </LoadingButton>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  ));\r\n};\r\n\r\nexport default FormObjectList;\r\n","import React, { useCallback, useState, useRef, useEffect } from 'react';\r\nimport {\r\n  SvgIcon,\r\n  Grid,\r\n  IconButton,\r\n  Step,\r\n  Stepper,\r\n  MobileStepper,\r\n  StepButton,\r\n  useMediaQuery,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  checkIcon,\r\n  leftArrowIcon,\r\n  plusIcon,\r\n  rightArrowIcon,\r\n  uploadIcon,\r\n  closeCircleIcon,\r\n} from '../../assets/svg/SvgIcons';\r\nimport Card3d from '../Card/Card3d';\r\nimport front from '../../assets/front.png';\r\nimport back from '../../assets/back.png';\r\nimport { fieldValidation } from '../helper/fieldValidation';\r\nimport RestructureFormObject from '../helper/RestructureFormObject';\r\nimport FormObjectList from '../helper/FormObjectList';\r\nimport { useStore } from '../../hooks/store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepperContainer: {\r\n    [theme.breakpoints.down('lg')]: {\r\n      width: theme.breakpoints.values.sm,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: theme.breakpoints.values.smd,\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      borderRadius: theme.spacing(1),\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    marginBottom: theme.spacing(6),\r\n    // backgroundColor: theme.palette.mode === 'dark' ? grey[800] : grey[100],\r\n  },\r\n  stepperHeader: {\r\n    margin: theme.spacing(3),\r\n    [theme.breakpoints.between('sm', 'lg')]: {\r\n      width: `calc(${theme.breakpoints.values.sm}px - ${theme.spacing(6)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: `calc(${theme.breakpoints.values.smd}px - ${theme.spacing(6)})`,\r\n    },\r\n  },\r\n  cardContainer: {\r\n    width: 360,\r\n    height: 200,\r\n    backgroundColor: theme.palette.mode === 'dark' ? grey[700] : grey[200],\r\n  },\r\n  stepperContent: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  completeButton: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  iconButton: {\r\n    marginTop: theme.spacing(2.5),\r\n  },\r\n  stepperInnerContent: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CardDetails = () => {\r\n  const [data, setData] = useState({\r\n    frontCard: front,\r\n    backCard: back,\r\n  });\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [completed, setCompleted] = useState({});\r\n  const [frontCard, setFrontCard] = useState();\r\n  const [frontCardIsLoading, setFrontCardIsLoading] = useState(false);\r\n  const [previewFrontCard, setPreviewFrontCard] = useState();\r\n  const [frontCardIsValid, setFrontCardIsValid] = useState(false);\r\n  const [backCard, setBackCard] = useState();\r\n  const [backCardIsLoading, setBackCardIsLoading] = useState(false);\r\n  const [previewBackCard, setPreviewBackCard] = useState();\r\n  const [backCardIsValid, setBackCardIsValid] = useState(false);\r\n  const [contactInfoIsValid, setContactInfoIsValid] = useState(false);\r\n  const [companyInfoIsValid, setCompanyInfoIsValid] = useState(false);\r\n  const [cardInfoIsValid, setCardInfoIsValid] = useState(true);\r\n  const [linksInfoIsValid, setLinksInfoIsValid] = useState(true);\r\n  const [DetailsInfoIsValid, setDetailsInfoIsValid] = useState(true);\r\n\r\n  const frontCardRef = useRef();\r\n\r\n  const backCardRef = useRef();\r\n\r\n  const [contactForm, setContactForm] = useState({\r\n    contactName: {\r\n      value: '',\r\n      name: 'contact-name',\r\n      label: 'Contact Name',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        minLength: 6,\r\n        maxLength: 10,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    contactNumber: {\r\n      value: '',\r\n      name: 'contact-number',\r\n      label: 'Contact Number',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    contactEmail: {\r\n      value: '',\r\n      name: 'contact-email',\r\n      label: 'Contact Email',\r\n      type: 'email',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        isEmail: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    smsBody: {\r\n      value: '',\r\n      name: 'sms-body',\r\n      label: 'SMS Body',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n  });\r\n\r\n  const [companyForm, setCompanyForm] = useState({\r\n    companyName: {\r\n      value: '',\r\n      name: 'company-name',\r\n      label: 'Company Name',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        minLength: 1,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    role: {\r\n      value: '',\r\n      name: 'role',\r\n      label: 'Role',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        minLength: 1,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    category: {\r\n      value: '',\r\n      name: 'category',\r\n      label: 'Category',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        minLength: 1,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    tags: {\r\n      value: '',\r\n      name: 'tags',\r\n      label: 'Tags',\r\n      type: 'select',\r\n      componentType: 'Autocomplete',\r\n      placeHolder: '',\r\n      multiple: true,\r\n      options: [\r\n        'option1',\r\n        'option2',\r\n        'option3',\r\n        'option4',\r\n        'option5',\r\n        'option6',\r\n        'option7',\r\n        'option8',\r\n      ],\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        minLength: 1,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    website: {\r\n      value: '',\r\n      name: 'websiteLink',\r\n      label: 'Website Link',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        minLength: 1,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    address: {\r\n      value: '',\r\n      name: 'address',\r\n      label: 'Address',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: true,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        minLength: 1,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n  });\r\n\r\n  const [newLink, setNewLink] = useState({\r\n    newTitle: {\r\n      value: '',\r\n      name: 'new-link-title',\r\n      label: 'New Link Title',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    newUrl: {\r\n      value: '',\r\n      name: 'new-link-url',\r\n      label: 'New Link URL',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n  });\r\n\r\n  const linksMapping = {\r\n    newTitle: 'title',\r\n    newUrl: 'url',\r\n  };\r\n\r\n  const [links, setLinks] = useState([\r\n    {\r\n      title: {\r\n        value: 'Like me on Facebook',\r\n        name: 'link-title',\r\n        label: 'Link Title',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: false,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n      url: {\r\n        value: 'www.facebook.com',\r\n        name: 'link-url',\r\n        label: 'Link URL',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: false,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: {\r\n        value: 'Subscribe me on Youtube',\r\n        name: 'link-title',\r\n        label: 'Link Title',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: false,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n      url: {\r\n        value: 'www.youtube.com',\r\n        name: 'link-url',\r\n        label: 'Link URL',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: false,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const [newDetail, setNewDetail] = useState({\r\n    newTitle: {\r\n      value: '',\r\n      name: 'new-detail-title',\r\n      label: 'New Detail Title',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: true, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n    newDescription: {\r\n      value: '',\r\n      name: 'new-detail-description',\r\n      label: 'New Detail Description',\r\n      type: 'text',\r\n      placeHolder: '',\r\n      multiline: true,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: true, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeCircleIcon,\r\n      },\r\n    },\r\n  });\r\n\r\n  const detailsMapping = {\r\n    newTitle: 'title',\r\n    newDescription: 'description',\r\n  };\r\n\r\n  const [details, setDetails] = useState([\r\n    {\r\n      title: {\r\n        value: 'ipsum',\r\n        name: 'detail-title',\r\n        label: 'Detail Title',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: false,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n      description: {\r\n        value: 'ipsum',\r\n        name: 'detail-description',\r\n        label: 'Detail Description',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: true,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: {\r\n        value: 'ipsum',\r\n        name: 'detail-title',\r\n        label: 'Detail Title',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: false,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n      description: {\r\n        value: 'ipsum',\r\n        name: 'detail-description',\r\n        label: 'Detail Description',\r\n        type: 'text',\r\n        placeHolder: '',\r\n        multiline: true,\r\n        disabled: false,\r\n        validations: {\r\n          isRequired: true,\r\n        },\r\n        isTouched: false,\r\n        validity: { isValid: true, label: '*Required' },\r\n        icon: {\r\n          type: 'close',\r\n          close: closeCircleIcon,\r\n        },\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const [state, dispatch] = useStore(true);\r\n\r\n  const isSmallDevice = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n  const isMediumDevice = useMediaQuery((theme) =>\r\n    theme.breakpoints.between('sm', 'lg')\r\n  );\r\n  const isLargeDevice = useMediaQuery((theme) => theme.breakpoints.up('lg'));\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!frontCard) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewFrontCard(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(frontCard);\r\n  }, [frontCard]);\r\n\r\n  useEffect(() => {\r\n    if (!backCard) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewBackCard(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(backCard);\r\n  }, [backCard]);\r\n\r\n  const pickCardHandler = (cardFacade) => () => {\r\n    cardFacade === 'front'\r\n      ? setFrontCardIsLoading(true)\r\n      : setBackCardIsLoading(true);\r\n\r\n    cardFacade === 'front'\r\n      ? frontCardRef.current.click()\r\n      : backCardRef.current.click();\r\n  };\r\n\r\n  const contactObjectListCompleteHandler = useCallback((args) => {\r\n    const { objectList } = { ...args };\r\n\r\n    const updatedForm = [...objectList];\r\n\r\n    const formValidityList = [];\r\n\r\n    updatedForm.map((item) => {\r\n      for (let key in item) {\r\n        formValidityList.push(item[key].validity.isValid);\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    let formIsValid = true;\r\n    formValidityList.map((isValid) => (formIsValid = formIsValid && isValid));\r\n\r\n    setLinksInfoIsValid(formIsValid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    contactObjectListCompleteHandler({ objectList: links });\r\n  }, [links, contactObjectListCompleteHandler]);\r\n\r\n  const detailObjectListCompleteHandler = useCallback((args) => {\r\n    const { objectList } = { ...args };\r\n\r\n    const updatedForm = [...objectList];\r\n\r\n    const formValidityList = [];\r\n\r\n    updatedForm.map((item) => {\r\n      for (let key in item) {\r\n        formValidityList.push(item[key].validity.isValid);\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    let formIsValid = true;\r\n    formValidityList.map((isValid) => (formIsValid = formIsValid && isValid));\r\n\r\n    setDetailsInfoIsValid(formIsValid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    detailObjectListCompleteHandler({ objectList: details });\r\n  }, [details, detailObjectListCompleteHandler]);\r\n\r\n  const contactFormCompleteChangeHandler = useCallback((args) => {\r\n    const { formObject } = { ...args };\r\n\r\n    const updatedForm = { ...formObject };\r\n\r\n    const formValidityList = [];\r\n\r\n    for (let key in updatedForm) {\r\n      formValidityList.push(updatedForm[key].validity.isValid);\r\n    }\r\n\r\n    let formIsValid = true;\r\n    formValidityList.map((isValid) => (formIsValid = formIsValid && isValid));\r\n\r\n    setContactInfoIsValid(formIsValid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    contactFormCompleteChangeHandler({ formObject: contactForm });\r\n  }, [contactForm, contactFormCompleteChangeHandler]);\r\n\r\n  const companyFormCompleteChangeHandler = useCallback((args) => {\r\n    const { formObject } = { ...args };\r\n\r\n    const updatedForm = { ...formObject };\r\n\r\n    const formValidityList = [];\r\n\r\n    for (let key in updatedForm) {\r\n      formValidityList.push(updatedForm[key].validity.isValid);\r\n    }\r\n\r\n    let formIsValid = true;\r\n    formValidityList.map((isValid) => (formIsValid = formIsValid && isValid));\r\n\r\n    setCompanyInfoIsValid(formIsValid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    companyFormCompleteChangeHandler({ formObject: companyForm });\r\n  }, [companyForm, companyFormCompleteChangeHandler]);\r\n\r\n  const fieldChangeHandler = useCallback((args, event) => {\r\n    const { fieldName, formObject, changeType = 'change' } = { ...args };\r\n\r\n    let updatedForm = {\r\n      ...formObject,\r\n      [fieldName]: {\r\n        ...formObject[fieldName],\r\n        value: changeType === 'change' ? event.target.value : '',\r\n        validity: {\r\n          ...formObject[fieldName].validity,\r\n          ...fieldValidation(\r\n            changeType === 'change' ? event.target.value : '',\r\n            formObject[fieldName].validations\r\n          ),\r\n        },\r\n        isTouched: true,\r\n      },\r\n    };\r\n    return updatedForm;\r\n  }, []);\r\n\r\n  const detailsFormObjectListChangeHandler = useCallback(\r\n    (args) => (event) => {\r\n      const { objectList, index } = { ...args };\r\n\r\n      let updatedForm = fieldChangeHandler(args, event);\r\n\r\n      let arrayObjectForm = [...objectList];\r\n      let updatedList = { ...arrayObjectForm[index] };\r\n      updatedList = updatedForm;\r\n      arrayObjectForm[index] = updatedList;\r\n\r\n      updatedForm = arrayObjectForm;\r\n\r\n      setDetails(updatedForm);\r\n    },\r\n    [fieldChangeHandler]\r\n  );\r\n\r\n  const linksFormObjectListChangeHandler = useCallback(\r\n    (args) => (event) => {\r\n      const { objectList, index } = { ...args };\r\n\r\n      let updatedForm = fieldChangeHandler(args, event);\r\n\r\n      let arrayObjectForm = [...objectList];\r\n      let updatedList = { ...arrayObjectForm[index] };\r\n      updatedList = updatedForm;\r\n      arrayObjectForm[index] = updatedList;\r\n\r\n      updatedForm = arrayObjectForm;\r\n\r\n      setLinks(updatedForm);\r\n    },\r\n    [fieldChangeHandler]\r\n  );\r\n\r\n  const contactFormObjectChangeHandler = useCallback(\r\n    (args) => (event) => {\r\n      const updatedForm = fieldChangeHandler(args, event);\r\n\r\n      setContactForm(updatedForm);\r\n    },\r\n    [fieldChangeHandler]\r\n  );\r\n\r\n  const companyFormObjectChangeHandler = useCallback(\r\n    (args) => (event) => {\r\n      const updatedForm = fieldChangeHandler(args, event);\r\n\r\n      setCompanyForm(updatedForm);\r\n    },\r\n    [fieldChangeHandler]\r\n  );\r\n\r\n  const newLinkObjectChangeHandler = useCallback(\r\n    (args) => (event) => {\r\n      const updatedForm = fieldChangeHandler(args, event);\r\n\r\n      setNewLink(updatedForm);\r\n    },\r\n    [fieldChangeHandler]\r\n  );\r\n\r\n  const newDetailObjectChangeHandler = useCallback(\r\n    (args) => (event) => {\r\n      const updatedForm = fieldChangeHandler(args, event);\r\n\r\n      setNewDetail(updatedForm);\r\n    },\r\n    [fieldChangeHandler]\r\n  );\r\n\r\n  const removeLinkObjectHandler = useCallback(\r\n    (args) => () => {\r\n      const { objectList, index } = {\r\n        ...args,\r\n      };\r\n\r\n      let updatedForm = [...objectList];\r\n      updatedForm.splice(index, 1);\r\n\r\n      setLinks(updatedForm);\r\n    },\r\n    []\r\n  );\r\n\r\n  const removeDetailObjectHandler = useCallback(\r\n    (args) => () => {\r\n      const { objectList, index } = {\r\n        ...args,\r\n      };\r\n\r\n      let updatedForm = [...objectList];\r\n      updatedForm.splice(index, 1);\r\n\r\n      setDetails(updatedForm);\r\n    },\r\n    []\r\n  );\r\n\r\n  const addLinkObjectHandler = (args) => () => {\r\n    const { objectList, newState, mapping } = {\r\n      ...args,\r\n    };\r\n    const updatedForm = [...objectList];\r\n    let copiedNewState = JSON.parse(JSON.stringify(newState));\r\n\r\n    const keyValues = Object.keys(copiedNewState).map((key) => {\r\n      // newTitle\r\n      const newKey = mapping[key] || key; // title\r\n      return { [newKey]: copiedNewState[key] }; // newTitle => title\r\n    });\r\n\r\n    let copiedKeyValues = Object.assign({}, ...keyValues);\r\n\r\n    for (const key in copiedKeyValues) {\r\n      const splitLabel = copiedKeyValues[key].label.split(' '); // label:\"New Link Title\" => New Link Title\r\n      splitLabel.splice(0, 1); // New,Link,Title => Link,Title\r\n      const recreateLabel = splitLabel.join(' '); // \"Link Title\"\r\n      copiedKeyValues[key].label = recreateLabel;\r\n    }\r\n\r\n    updatedForm.push(copiedKeyValues);\r\n\r\n    setLinks(updatedForm);\r\n\r\n    let copiedNewState2 = JSON.parse(JSON.stringify(newState));\r\n\r\n    for (const key in copiedNewState2) {\r\n      copiedNewState2[key].value = '';\r\n    }\r\n\r\n    setNewLink(copiedNewState2);\r\n  };\r\n\r\n  const addDetailObjectHandler = (args) => () => {\r\n    const { objectList, newState, mapping } = {\r\n      ...args,\r\n    };\r\n    const updatedForm = [...objectList];\r\n    let copiedNewState = JSON.parse(JSON.stringify(newState));\r\n\r\n    const keyValues = Object.keys(copiedNewState).map((key) => {\r\n      // newTitle\r\n      const newKey = mapping[key] || key; // title\r\n      return { [newKey]: copiedNewState[key] }; // newTitle => title\r\n    });\r\n\r\n    let copiedKeyValues = Object.assign({}, ...keyValues);\r\n\r\n    for (const key in copiedKeyValues) {\r\n      const splitLabel = copiedKeyValues[key].label.split(' '); // label:\"New Link Title\" => New Link Title\r\n      splitLabel.splice(0, 1); // New,Link,Title => Link,Title\r\n      const recreateLabel = splitLabel.join(' '); // \"Link Title\"\r\n      copiedKeyValues[key].label = recreateLabel;\r\n    }\r\n\r\n    updatedForm.push(copiedKeyValues);\r\n\r\n    setDetails(updatedForm);\r\n\r\n    let copiedNewState2 = JSON.parse(JSON.stringify(newState));\r\n\r\n    for (const key in copiedNewState2) {\r\n      copiedNewState2[key].value = '';\r\n    }\r\n\r\n    setNewDetail(copiedNewState2);\r\n  };\r\n\r\n  const cardChangeHandler = (cardFacade) => (event) => {\r\n    let pickedFile;\r\n\r\n    // let fileIsValid =\r\n    //   cardFacade === 'front' ? frontCardIsValid : backCardIsValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      cardFacade === 'front'\r\n        ? setFrontCard(pickedFile)\r\n        : setBackCard(pickedFile);\r\n\r\n      cardFacade === 'front'\r\n        ? setFrontCardIsValid(true)\r\n        : setBackCardIsValid(true);\r\n      // fileIsValid = true;\r\n    } else {\r\n      cardFacade === 'front'\r\n        ? setFrontCardIsValid(false)\r\n        : setBackCardIsValid(false);\r\n      // fileIsValid = false;\r\n    }\r\n\r\n    cardFacade === 'front'\r\n      ? setFrontCardIsLoading(false)\r\n      : setBackCardIsLoading(false);\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const stepHandler = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const stepBackHandler = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const stepNextHandler = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const stepCompleteHandler = () => {\r\n    const newCompleted = { ...completed };\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    stepNextHandler();\r\n  };\r\n\r\n  const steps = [\r\n    'Contact info',\r\n    'Company info',\r\n    'Card info',\r\n    'Links info',\r\n    'Details info',\r\n  ];\r\n\r\n  const CompleteButton = (props) => {\r\n    const { infoIsValid } = props;\r\n\r\n    return (\r\n      activeStep !== steps.length &&\r\n      (completed[activeStep] ? (\r\n        <LoadingButton\r\n          className={classes.completeButton}\r\n          startIcon={\r\n            <SvgIcon>\r\n              <path d={checkIcon.path} />\r\n            </SvgIcon>\r\n          }\r\n          disabled\r\n          color=\"secondary\"\r\n          onClick={stepNextHandler}\r\n          pendingPosition=\"start\"\r\n          variant=\"contained\"\r\n        >\r\n          Completed\r\n        </LoadingButton>\r\n      ) : (\r\n        <LoadingButton\r\n          className={classes.completeButton}\r\n          startIcon={\r\n            <SvgIcon>\r\n              {completedSteps() === totalSteps() - 1 ? (\r\n                <path d={plusIcon.path} />\r\n              ) : (\r\n                <path d={checkIcon.path} />\r\n              )}\r\n            </SvgIcon>\r\n          }\r\n          disabled={!infoIsValid}\r\n          color=\"secondary\"\r\n          onClick={stepCompleteHandler}\r\n          pendingPosition=\"start\"\r\n          variant=\"contained\"\r\n        >\r\n          {completedSteps() === totalSteps() - 1 ? 'Create' : 'Complete'}\r\n        </LoadingButton>\r\n      ))\r\n    );\r\n  };\r\n\r\n  if (!state.isAuthenticated) {\r\n    return <Redirect to=\"signin\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      {/* <Grid item style={{ width: 600, height: 400, border: '3px solid white' }}>\r\n        <Card3d data={data} />\r\n      </Grid> */}\r\n      <Paper className={classes.stepperContainer}>\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            {isSmallDevice ? (\r\n              <MobileStepper\r\n                steps={totalSteps()}\r\n                activeStep={activeStep}\r\n                backButton={\r\n                  <LoadingButton\r\n                    startIcon={\r\n                      <SvgIcon>\r\n                        <path d={leftArrowIcon.path} />\r\n                      </SvgIcon>\r\n                    }\r\n                    color=\"secondary\"\r\n                    disabled={activeStep === 0}\r\n                    onClick={stepBackHandler}\r\n                    pendingPosition=\"start\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Back\r\n                  </LoadingButton>\r\n                }\r\n                nextButton={\r\n                  <LoadingButton\r\n                    startIcon={\r\n                      <SvgIcon>\r\n                        <path d={rightArrowIcon.path} />\r\n                      </SvgIcon>\r\n                    }\r\n                    color=\"secondary\"\r\n                    disabled={isLastStep()}\r\n                    onClick={stepNextHandler}\r\n                    pendingPosition=\"start\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Next\r\n                  </LoadingButton>\r\n                }\r\n              />\r\n            ) : (\r\n              <Stepper\r\n                nonLinear\r\n                activeStep={activeStep}\r\n                orientation=\"horizontal\"\r\n                alternativeLabel={isLargeDevice ? false : true}\r\n                className={classes.stepperHeader}\r\n              >\r\n                {steps.map((label, index) => (\r\n                  <Step key={label} completed={completed[index]}>\r\n                    <StepButton onClick={stepHandler(index)}>\r\n                      {label}\r\n                    </StepButton>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n            )}\r\n          </Grid>\r\n          <Grid item className={classes.stepperContent}>\r\n            {\r\n              {\r\n                0: (\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <RestructureFormObject\r\n                      formObject={contactForm}\r\n                      formChangeHandler={contactFormObjectChangeHandler}\r\n                    />\r\n                    <Grid item>\r\n                      <CompleteButton infoIsValid={contactInfoIsValid} />\r\n                    </Grid>\r\n                  </Grid>\r\n                ),\r\n                1: (\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <RestructureFormObject\r\n                      formObject={companyForm}\r\n                      formChangeHandler={companyFormObjectChangeHandler}\r\n                    />\r\n                    <Grid item>\r\n                      <CompleteButton infoIsValid={companyInfoIsValid} />\r\n                    </Grid>\r\n                  </Grid>\r\n                ),\r\n                2: (\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Grid item>\r\n                      <input\r\n                        id=\"front-card\"\r\n                        ref={frontCardRef}\r\n                        style={{ display: 'none' }}\r\n                        type=\"file\"\r\n                        accept=\".jpg,.png,.jpeg\"\r\n                        onChange={cardChangeHandler('front')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item className={classes.stepperInnerContent}>\r\n                      <Paper className={classes.cardContainer}>\r\n                        {previewFrontCard && (\r\n                          <img\r\n                            src={previewFrontCard}\r\n                            alt=\"Preview\"\r\n                            className={classes.cardContainer}\r\n                          />\r\n                        )}\r\n                        {!previewFrontCard && (\r\n                          <Grid\r\n                            container\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ width: '100%', height: '100%' }}\r\n                          >\r\n                            <p>Please pick front card image</p>\r\n                          </Grid>\r\n                        )}\r\n                      </Paper>\r\n                    </Grid>\r\n                    <Grid item className={classes.stepperInnerContent}>\r\n                      <LoadingButton\r\n                        startIcon={\r\n                          <SvgIcon>\r\n                            <path d={uploadIcon.path} />\r\n                          </SvgIcon>\r\n                        }\r\n                        color=\"secondary\"\r\n                        onClick={pickCardHandler('front')}\r\n                        pendingPosition=\"start\"\r\n                        variant=\"outlined\"\r\n                        pending={backCardIsLoading}\r\n                      >\r\n                        Front Card\r\n                      </LoadingButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <input\r\n                        id=\"back-card\"\r\n                        ref={backCardRef}\r\n                        style={{ display: 'none' }}\r\n                        type=\"file\"\r\n                        accept=\".jpg,.png,.jpeg\"\r\n                        onChange={cardChangeHandler('back')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item className={classes.stepperInnerContent}>\r\n                      <Paper className={classes.cardContainer}>\r\n                        {previewBackCard && (\r\n                          <img\r\n                            src={previewBackCard}\r\n                            alt=\"Preview\"\r\n                            className={classes.cardContainer}\r\n                          />\r\n                        )}\r\n                        {!previewBackCard && (\r\n                          <Grid\r\n                            container\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ width: '100%', height: '100%' }}\r\n                          >\r\n                            <p>Please pick back card image</p>\r\n                          </Grid>\r\n                        )}\r\n                      </Paper>\r\n                    </Grid>\r\n                    <Grid item className={classes.stepperInnerContent}>\r\n                      <LoadingButton\r\n                        startIcon={\r\n                          <SvgIcon>\r\n                            <path d={uploadIcon.path} />\r\n                          </SvgIcon>\r\n                        }\r\n                        color=\"secondary\"\r\n                        onClick={pickCardHandler('back')}\r\n                        pendingPosition=\"start\"\r\n                        variant=\"outlined\"\r\n                        pending={backCardIsLoading}\r\n                      >\r\n                        Back Card\r\n                      </LoadingButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <CompleteButton infoIsValid={cardInfoIsValid} />\r\n                    </Grid>\r\n                  </Grid>\r\n                ),\r\n                3: (\r\n                  <Grid container direction=\"column\" alignItems=\"center\">\r\n                    {links.length > 0 ? (\r\n                      <FormObjectList\r\n                        objectList={links}\r\n                        formChangeHandler={linksFormObjectListChangeHandler}\r\n                        removeFormObjectHandler={removeLinkObjectHandler}\r\n                        flowType=\"flex\"\r\n                      />\r\n                    ) : null}\r\n                    <Grid\r\n                      container\r\n                      direction={isLargeDevice ? 'row' : 'column'}\r\n                      justifyContent=\"center\"\r\n                      alignItems={isLargeDevice ? null : 'center'}\r\n                    >\r\n                      <RestructureFormObject\r\n                        formObject={newLink}\r\n                        formChangeHandler={newLinkObjectChangeHandler}\r\n                      />\r\n                      <Grid item>\r\n                        {isLargeDevice ? (\r\n                          <IconButton\r\n                            className={classes.iconButton}\r\n                            aria-label=\"add\"\r\n                            color=\"secondary\"\r\n                            onClick={addLinkObjectHandler({\r\n                              objectList: links,\r\n                              newState: newLink,\r\n                              mapping: linksMapping,\r\n                            })}\r\n                          >\r\n                            <SvgIcon>\r\n                              <path d={plusIcon.path} />\r\n                            </SvgIcon>\r\n                          </IconButton>\r\n                        ) : (\r\n                          <LoadingButton\r\n                            aria-label=\"add\"\r\n                            color=\"secondary\"\r\n                            onClick={addLinkObjectHandler({\r\n                              objectList: links,\r\n                              newState: newLink,\r\n                              mapping: linksMapping,\r\n                            })}\r\n                            startIcon={\r\n                              <SvgIcon>\r\n                                <path d={plusIcon.path} />\r\n                              </SvgIcon>\r\n                            }\r\n                            pendingPosition=\"start\"\r\n                            variant=\"outlined\"\r\n                          >\r\n                            ADD\r\n                          </LoadingButton>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <CompleteButton infoIsValid={linksInfoIsValid} />\r\n                    </Grid>\r\n                  </Grid>\r\n                ),\r\n                4: (\r\n                  <Grid container direction=\"column\" alignItems=\"center\">\r\n                    {details.length > 0 ? (\r\n                      <FormObjectList\r\n                        objectList={details}\r\n                        formChangeHandler={detailsFormObjectListChangeHandler}\r\n                        removeFormObjectHandler={removeDetailObjectHandler}\r\n                        flowType=\"column\"\r\n                      />\r\n                    ) : null}\r\n                    <Grid\r\n                      container\r\n                      direction=\"column\"\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <RestructureFormObject\r\n                        formObject={newDetail}\r\n                        formChangeHandler={newDetailObjectChangeHandler}\r\n                      />\r\n                      <Grid item>\r\n                        <LoadingButton\r\n                          aria-label=\"add\"\r\n                          color=\"secondary\"\r\n                          onClick={addDetailObjectHandler({\r\n                            objectList: details,\r\n                            newState: newDetail,\r\n                            mapping: detailsMapping,\r\n                          })}\r\n                          startIcon={\r\n                            <SvgIcon>\r\n                              <path d={plusIcon.path} />\r\n                            </SvgIcon>\r\n                          }\r\n                          pendingPosition=\"start\"\r\n                          variant=\"outlined\"\r\n                        >\r\n                          ADD\r\n                        </LoadingButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <CompleteButton infoIsValid={DetailsInfoIsValid} />\r\n                    </Grid>\r\n                  </Grid>\r\n                ),\r\n              }[activeStep]\r\n            }\r\n          </Grid>\r\n\r\n          {allStepsCompleted() ? (\r\n            <p>All Steps are Completed</p>\r\n          ) : (\r\n            <Grid container item>\r\n              {isSmallDevice ? null : (\r\n                <Grid\r\n                  item\r\n                  container\r\n                  style={{ width: '100%', margin: 12 }}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Grid item>\r\n                    <LoadingButton\r\n                      startIcon={\r\n                        <SvgIcon>\r\n                          <path d={leftArrowIcon.path} />\r\n                        </SvgIcon>\r\n                      }\r\n                      color=\"secondary\"\r\n                      disabled={activeStep === 0}\r\n                      onClick={stepBackHandler}\r\n                      pendingPosition=\"start\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Back\r\n                    </LoadingButton>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <LoadingButton\r\n                      startIcon={\r\n                        <SvgIcon>\r\n                          <path d={rightArrowIcon.path} />\r\n                        </SvgIcon>\r\n                      }\r\n                      color=\"secondary\"\r\n                      disabled={isLastStep()}\r\n                      onClick={stepNextHandler}\r\n                      pendingPosition=\"start\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Next\r\n                    </LoadingButton>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","export const fieldsIsValidHandler = (args) => {\r\n  const { formObject } = { ...args };\r\n\r\n  const updatedForm = { ...formObject };\r\n\r\n  const formValidityList = [];\r\n\r\n  for (let key in updatedForm) {\r\n    formValidityList.push(updatedForm[key].validity.isValid);\r\n  }\r\n\r\n  let formIsValid = true;\r\n  formValidityList.map((isValid) => (formIsValid = formIsValid && isValid));\r\n\r\n  return formIsValid;\r\n};\r\n","export const User = {\r\n  user: {\r\n    name: 'Mark Zuckerberg',\r\n    email: 'markzukerberg@faceboook.com',\r\n    image:\r\n      'https://static01.nyt.com/images/2020/11/17/business/17techhearing-facebookpreview/merlin_163192374_92604511-ae28-43ba-8d7f-d3fbdae53e01-mobileMasterAt3x.jpg',\r\n    birthDate: '01011991',\r\n    password: '123',\r\n    accountType: 'Free-Tier',\r\n    updated: '',\r\n    created: '',\r\n  },\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { SvgIcon, Grid, Typography, Paper } from '@material-ui/core';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  closeIcon,\r\n  visibilityOffIcon,\r\n  visibilityOnIcon,\r\n  loginIcon,\r\n  lockQuestionIcon,\r\n  swapIcon,\r\n} from '../../assets/svg/SvgIcons';\r\nimport { fieldChangeHandler } from '../helper/fieldChangeHandler';\r\nimport { fieldsIsValidHandler } from '../helper/fieldsIsValidHandler';\r\nimport RestructureFormObject from '../helper/RestructureFormObject';\r\nimport { useStore } from '../../hooks/store';\r\nimport { User } from '../Demo/User';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputContainer: {\r\n    maxWidth: theme.breakpoints.values.sm,\r\n    [theme.breakpoints.up('sm')]: {\r\n      borderRadius: theme.spacing(1),\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    width: theme.breakpoints.values.sm,\r\n    padding: theme.spacing(3),\r\n  },\r\n  buttonSpacing: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Registration = (props) => {\r\n  const [state, dispatch] = useStore(true);\r\n  const [isPendingSignIn, setIsPendingSignIn] = useState(false);\r\n  const [isPendingRequestPassword, setIsPendingRequestPassword] = useState(\r\n    false\r\n  );\r\n  const [isPendingChangeType, setIsPendingChangeType] = useState(false);\r\n  const [enteredCredential, setEnteredCredential] = useState({\r\n    email: {\r\n      value: '',\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n        isEmail: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeIcon,\r\n      },\r\n    },\r\n    password: {\r\n      value: '',\r\n      name: 'password',\r\n      label: 'Password',\r\n      type: 'password',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'toggle',\r\n        on: visibilityOnIcon,\r\n        off: visibilityOffIcon,\r\n        isOn: false,\r\n      },\r\n    },\r\n  });\r\n  const [enteredCredentialIsValid, setEnteredCredentialIsValid] = useState(\r\n    false\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  const signInHandler = () => {\r\n    if (\r\n      enteredCredential.email.value === 'markzukerberg@faceboook.com' &&\r\n      enteredCredential.password.value === '123'\r\n    ) {\r\n      dispatch('SIGN_IN', User);\r\n    } else {\r\n      alert('Invalid Credential');\r\n    }\r\n  };\r\n\r\n  const forgetPasswordHandler = () => {\r\n    setIsPendingRequestPassword(true);\r\n    setTimeout(() => {\r\n      setIsPendingRequestPassword(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const enteredCredentialChangeHandler = (args) => (event) => {\r\n    const updatedForm = fieldChangeHandler(args, event);\r\n\r\n    setEnteredCredential(updatedForm);\r\n  };\r\n\r\n  const enteredCredentialIsValidHandler = useCallback((args) => {\r\n    const fieldsIsValid = fieldsIsValidHandler(args);\r\n\r\n    setEnteredCredentialIsValid(fieldsIsValid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    enteredCredentialIsValidHandler({ formObject: enteredCredential });\r\n  }, [enteredCredential, enteredCredentialIsValidHandler]);\r\n\r\n  if (state.isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Paper className={classes.inputContainer}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h4\">Sign In</Typography>\r\n          <Grid item>\r\n            <RestructureFormObject\r\n              formObject={enteredCredential}\r\n              formChangeHandler={enteredCredentialChangeHandler}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item style={{ display: 'flex' }}>\r\n            <LoadingButton\r\n              startIcon={\r\n                <SvgIcon>\r\n                  <path d={loginIcon.path} />\r\n                </SvgIcon>\r\n              }\r\n              color=\"secondary\"\r\n              onClick={signInHandler}\r\n              pending={isPendingSignIn}\r\n              disabled={!enteredCredentialIsValid}\r\n              pendingPosition=\"start\"\r\n              variant=\"contained\"\r\n              className={classes.buttonSpacing}\r\n              type=\"submit\"\r\n            >\r\n              Sign In\r\n            </LoadingButton>\r\n          </Grid>\r\n          <Grid item style={{ display: 'flex' }}>\r\n            <LoadingButton\r\n              component={RouterLink}\r\n              to={'/signup'}\r\n              startIcon={\r\n                <SvgIcon>\r\n                  <path d={swapIcon.path} />\r\n                </SvgIcon>\r\n              }\r\n              color=\"secondary\"\r\n              pending={isPendingChangeType}\r\n              pendingPosition=\"start\"\r\n              variant=\"outlined\"\r\n              className={classes.buttonSpacing}\r\n            >\r\n              Switch to Register\r\n            </LoadingButton>\r\n          </Grid>\r\n\r\n          <Grid item style={{ display: 'flex' }}>\r\n            <LoadingButton\r\n              startIcon={\r\n                <SvgIcon>\r\n                  <path d={lockQuestionIcon.path} />\r\n                </SvgIcon>\r\n              }\r\n              color=\"secondary\"\r\n              onClick={forgetPasswordHandler}\r\n              pending={isPendingRequestPassword}\r\n              pendingPosition=\"start\"\r\n              variant=\"outlined\"\r\n              className={classes.buttonSpacing}\r\n            >\r\n              Forget Password\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport { SvgIcon, Grid, Typography, Paper } from '@material-ui/core';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport {\r\n  closeIcon,\r\n  visibilityOffIcon,\r\n  visibilityOnIcon,\r\n  emailSendIcon,\r\n  swapIcon,\r\n} from '../../assets/svg/SvgIcons';\r\nimport { fieldChangeHandler } from '../helper/fieldChangeHandler';\r\nimport { fieldsIsValidHandler } from '../helper/fieldsIsValidHandler';\r\nimport RestructureFormObject from '../helper/RestructureFormObject';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputContainer: {\r\n    maxWidth: theme.breakpoints.values.sm,\r\n    [theme.breakpoints.up('sm')]: {\r\n      borderRadius: theme.spacing(1),\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    width: theme.breakpoints.values.sm,\r\n    padding: theme.spacing(3),\r\n  },\r\n  buttonSpacing: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SignUp = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [isSignIn, setIsSignIn] = useState(true);\r\n\r\n  const [isPendingSignIn, setIsPendingSignIn] = useState(false);\r\n\r\n  const [isPendingRequestPassword, setIsPendingRequestPassword] = useState(\r\n    false\r\n  );\r\n\r\n  const [isPendingChangeType, setIsPendingChangeType] = useState(false);\r\n\r\n  const [passwordType, setPasswordType] = useState('password');\r\n  const [toggleVisibilityIcon, setToggleVisibilityIcon] = useState(false);\r\n\r\n  const [enteredCredential, setEnteredCredential] = useState({\r\n    email: {\r\n      value: '',\r\n      name: 'email',\r\n      label: 'Email',\r\n      type: 'email',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'close',\r\n        close: closeIcon,\r\n      },\r\n    },\r\n    password: {\r\n      value: '',\r\n      name: 'password',\r\n      label: 'Password',\r\n      type: 'password',\r\n      placeHolder: '',\r\n      multiline: false,\r\n      disabled: false,\r\n      validations: {\r\n        isRequired: true,\r\n      },\r\n      isTouched: false,\r\n      validity: { isValid: false, label: '*Required' },\r\n      icon: {\r\n        type: 'toggle',\r\n        on: visibilityOnIcon,\r\n        off: visibilityOffIcon,\r\n        isOn: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const [enteredCredentialIsValid, setEnteredCredentialIsValid] = useState(\r\n    false\r\n  );\r\n\r\n  const signUpHandler = () => {\r\n    alert('Account Registration completed. This is for demo purpose only.');\r\n  };\r\n\r\n  const enteredCredentialChangeHandler = (args) => (event) => {\r\n    const updatedForm = fieldChangeHandler(args, event);\r\n\r\n    setEnteredCredential(updatedForm);\r\n  };\r\n\r\n  const enteredCredentialIsValidHandler = useCallback((args) => {\r\n    const fieldsIsValid = fieldsIsValidHandler(args);\r\n\r\n    setEnteredCredentialIsValid(fieldsIsValid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    enteredCredentialIsValidHandler({ formObject: enteredCredential });\r\n  }, [enteredCredential, enteredCredentialIsValidHandler]);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Paper className={classes.inputContainer}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h4\">Create Free Account</Typography>\r\n          <Grid item>\r\n            <RestructureFormObject\r\n              formObject={enteredCredential}\r\n              formChangeHandler={enteredCredentialChangeHandler}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item style={{ display: 'flex' }}>\r\n            <LoadingButton\r\n              startIcon={\r\n                <SvgIcon>\r\n                  <path d={emailSendIcon.path} />\r\n                </SvgIcon>\r\n              }\r\n              color=\"secondary\"\r\n              onClick={signUpHandler}\r\n              pending={isPendingSignIn}\r\n              disabled={!enteredCredentialIsValid}\r\n              pendingPosition=\"start\"\r\n              variant=\"contained\"\r\n              className={classes.buttonSpacing}\r\n              type=\"submit\"\r\n            >\r\n              Register\r\n            </LoadingButton>\r\n          </Grid>\r\n          <Grid item style={{ display: 'flex' }}>\r\n            <LoadingButton\r\n              component={RouterLink}\r\n              to={'/signin'}\r\n              startIcon={\r\n                <SvgIcon>\r\n                  <path d={swapIcon.path} />\r\n                </SvgIcon>\r\n              }\r\n              color=\"secondary\"\r\n              pending={isPendingChangeType}\r\n              pendingPosition=\"start\"\r\n              variant=\"outlined\"\r\n              className={classes.buttonSpacing}\r\n            >\r\n              Switch to Sign In\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useStore } from '../../hooks/store';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const [state, dispatch] = useStore(false);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        state.isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: '/signin', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport NavBar from './components/core/NavBar';\r\nimport Home from './components/core/Home';\r\nimport LatestCard from './components/Card/LatestCard';\r\nimport Details from './components/Account/Details';\r\nimport CardDetails from './components/Account/CardDetails';\r\nimport SignIn from './components/Account/SignIn';\r\nimport SignUp from './components/Account/SignUp';\r\nimport PrivateRoute from './components/Auth/PrivateRoute';\r\n\r\nconst MainRouter = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/latest\" component={LatestCard} />\r\n        <Route exact path=\"/features\">\r\n          <p>Features</p>\r\n        </Route>\r\n        <Route exact path=\"/regions\">\r\n          <p>Regions</p>\r\n        </Route>\r\n        <PrivateRoute exact path=\"/account\" component={Details} />\r\n        <PrivateRoute exact path=\"/card\" component={CardDetails} />\r\n        <Route exact path=\"/signin\" component={SignIn} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","import React, { useMemo } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  responsiveFontSizes,\n} from '@material-ui/core/styles';\n// import {zhCN} from '@material-ui/core/locale'\nimport { useMediaQuery } from '@material-ui/core';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport theme from './theme';\nimport MainRouter from './MainRouter';\n\nconst App = () => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const extendedTheme = useMemo(\n    () =>\n      responsiveFontSizes(\n        createMuiTheme({\n          ...theme,\n          palette: {\n            ...theme.palette,\n            primary: {\n              main: prefersDarkMode\n                ? theme.palette.primary.dark\n                : theme.palette.primary.light,\n            },\n            secondary: {\n              main: prefersDarkMode\n                ? theme.palette.secondary.dark\n                : theme.palette.secondary.light,\n            },\n            mode: prefersDarkMode ? 'dark' : 'light',\n          },\n          breakpoints: {\n            ...theme.breakpoints,\n            values: {\n              ...theme.breakpoints.values,\n            },\n          },\n          components: {\n            MuiPaper: {\n              defaultProps: {\n                variant: prefersDarkMode ? '' : 'elevation',\n              },\n            },\n            MuiButton: {\n              defaultProps: {\n                disableElevation: prefersDarkMode ? true : false,\n              },\n            },\n            MuiMobileStepper: {\n              styleOverrides: {\n                dotActive: {\n                  backgroundColor: prefersDarkMode\n                    ? theme.palette.secondary.dark\n                    : theme.palette.secondary.light,\n                },\n              },\n            },\n            // MuiTabs: {\n            //   styleOverrides: {\n            //     indicator: {\n            //       width: 99,\n            //     },\n            //   },\n            // },\n          },\n        })\n      ),\n    [prefersDarkMode]\n  );\n\n  return (\n    <Router basename=\"/\">\n      <ThemeProvider theme={extendedTheme}>\n        <CssBaseline />\n        <MainRouter />\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { initStore } from './store';\r\n\r\nconst configureStore = () => {\r\n  const actions = {\r\n    SIGN_IN: (curState, user) => {\r\n      const copiedUser = { ...curState.user, ...user.user };\r\n      return { user: copiedUser, isAuthenticated: true };\r\n    },\r\n\r\n    SIGN_OUT: (curState) => {\r\n      const resetUser = {\r\n        ...curState.user,\r\n        name: '',\r\n        email: '',\r\n        image: '',\r\n        birthDate: '',\r\n        password: '',\r\n        accountType: '',\r\n      };\r\n      console.log(resetUser);\r\n      return { user: resetUser, isAuthenticated: false };\r\n    },\r\n  };\r\n\r\n  initStore(actions, {\r\n    user: {\r\n      name: '',\r\n      email: '',\r\n      image: '',\r\n      birthDate: '',\r\n      password: '',\r\n      accountType: '',\r\n    },\r\n    isAuthenticated: false,\r\n  });\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport userStore from './hooks/store-user';\n\nuserStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}